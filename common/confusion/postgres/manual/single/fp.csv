issue_id,commit_id,p_x,l_x,issue_desc,issue_comments,summary,files,created_at,closed_at,commit_time
10,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,0.0012883744202554,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-05 13:28:47+02:00
11,aebf426ab3350d922e78442db19398914f4610aa,6.921126623637974e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-07 20:09:02+02:00
12,6c5e663747462817aa670b59addb191b618c5eb9,0.0091631393879652,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-10-11 17:32:29+03:00
12,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,0.0148499486967921,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-05 13:28:47+02:00
12,535fdf800713ce7b74f1e330e9c02af0bb981db2,0.00357292057015,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-12-12 14:47:03+02:00
17,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,8.23076261440292e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-08 10:09:32+02:00
19,6c5e663747462817aa670b59addb191b618c5eb9,0.0001145571950473,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-10-11 17:32:29+03:00
22,6c5e663747462817aa670b59addb191b618c5eb9,0.0581310950219631,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-10-11 17:32:29+03:00
22,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,0.9910495281219482,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-05 13:28:47+02:00
22,3d6dec83450eb47b7c1c89380c7d32be851a2780,0.0010307795600965,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-12-16 13:05:50+02:00
33,6c5e663747462817aa670b59addb191b618c5eb9,0.0029586933087557,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-10-11 17:32:29+03:00
34,aebf426ab3350d922e78442db19398914f4610aa,0.9904882907867432,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-07 20:09:02+02:00
37,3d6dec83450eb47b7c1c89380c7d32be851a2780,0.0009172561694867,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-12-16 13:05:50+02:00
47,535fdf800713ce7b74f1e330e9c02af0bb981db2,0.0022445975337177,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-12-12 14:47:03+02:00
55,f0c8da964af2e49927972c237584994b8aca901b,0.0002206778735853,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-08 10:05:35+02:00
56,de27eb5c5d71e31de1e07099cbea189952749079,0.000133340654429,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-08 10:07:16+02:00
70,bbd831ee1f05324f62486eca5ace30ed845111a7,0.0001707839983282,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-21 12:21:55+02:00
72,535fdf800713ce7b74f1e330e9c02af0bb981db2,0.0098002571612596,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-12-12 14:47:03+02:00
79,cd7168bd9791c3c51875f85850371cec52a72e57,0.0002187251520808,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-21 16:23:44+02:00
81,535fdf800713ce7b74f1e330e9c02af0bb981db2,0.983263373374939,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-12-12 14:47:03+02:00
91,6c5e663747462817aa670b59addb191b618c5eb9,0.0029461332596838,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-10-11 17:32:29+03:00
