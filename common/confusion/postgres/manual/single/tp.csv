issue_id,commit_id,p_x,l_x,issue_desc,issue_comments,summary,files,created_at,closed_at,commit_time
3,deb3a2a40e7985cd361fcd18ccfebab53b113d71,0.0001493135350756,1,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-09-25 06:01:08+00:00
8,89f77867806bb11df2be061fb4e287ef3bedaf62,0.0002760947099886,1,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-12-10 16:52:54+02:00
9,f0c8da964af2e49927972c237584994b8aca901b,0.0716506019234657,1,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-08 10:05:35+02:00
10,6c5e663747462817aa670b59addb191b618c5eb9,0.9999163150787354,1,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-10-11 17:32:29+03:00
11,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,0.0018537723226472,1,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-10-26 12:21:19+03:00
12,aebf426ab3350d922e78442db19398914f4610aa,0.0001444845256628,1,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-07 20:09:02+02:00
45,384f6bc82083044b78ca8730d99ba7b0d48e61d1,7.563143299194053e-05,1,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-06 16:27:06+02:00
47,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,0.1477835476398468,1,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-04 16:51:55+02:00
55,de27eb5c5d71e31de1e07099cbea189952749079,0.9808242321014404,1,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-08 10:07:16+02:00
72,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,0.9927536845207214,1,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-21 12:02:28+02:00
76,bbd831ee1f05324f62486eca5ace30ed845111a7,0.9411733150482178,1,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-21 12:21:55+02:00
91,3d6dec83450eb47b7c1c89380c7d32be851a2780,0.9998897314071656,1,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-12-16 13:05:50+02:00
