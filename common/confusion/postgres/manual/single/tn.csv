issue_id,commit_id,p_x,l_x,issue_desc,issue_comments,summary,files,created_at,closed_at,commit_time
3,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0320793990103994e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-08 10:09:32+02:00
3,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0582847608020527e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-12-10 16:52:54+02:00
3,f0c8da964af2e49927972c237584994b8aca901b,1.0626263247104362e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-08 10:05:35+02:00
3,6c5e663747462817aa670b59addb191b618c5eb9,1.043737393047195e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-10-11 17:32:29+03:00
3,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0379297236795535e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-10-26 12:21:19+03:00
3,aebf426ab3350d922e78442db19398914f4610aa,1.7376692994730547e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-07 20:09:02+02:00
3,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0399866368970834e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-10-13 12:22:38+03:00
3,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0785554877656978e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-12-16 18:54:08+02:00
3,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0300353096681649e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-06 16:07:52+02:00
3,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.051870367518859e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-05 13:28:47+02:00
3,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.047124169417657e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-06 14:04:38+02:00
3,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0347334864491131e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-06 16:27:06+02:00
3,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0525065590627491e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-04 16:51:55+02:00
3,cd7168bd9791c3c51875f85850371cec52a72e57,1.040669212670764e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-21 16:23:44+02:00
3,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0466010280651972e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-12-22 12:07:50+02:00
3,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0411794391984586e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-22 17:15:00+02:00
3,de27eb5c5d71e31de1e07099cbea189952749079,1.0572255632723682e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-08 10:07:16+02:00
3,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0588369150354993e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-21 22:39:05+02:00
3,9e87043b619778dee4903f22deeda35ed41af442,1.0587540600681676e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-21 12:02:15+02:00
3,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0562510396994185e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-21 12:02:28+02:00
3,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0539267350395676e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-21 12:02:45+02:00
3,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0523851415200625e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-11-21 12:21:55+02:00
3,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.1521540727699175e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-12-12 14:47:03+02:00
3,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.038834852806758e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-12-16 13:05:50+02:00
3,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0628371455823071e-05,0,"Developers need to capture user input and psql output in a completely transparent fashion . This module allows complementing psql output arbitrarily , without interfering with readline hotkeys or inducing visual garbage . Module decodes the byte-stream and sends off in the SQL statement ( s ) and their output in stringified form for analysis , receiving a helpful message to show to the user in return .",Basic wrapper module,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-22 11:59:34+00:00,2022-09-25 06:01:09+00:00,2022-12-02 19:51:33+02:00
6,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.04248310890398e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-09-25 06:01:08+00:00
6,89f77867806bb11df2be061fb4e287ef3bedaf62,1.2003991287201645e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-12-10 16:52:54+02:00
6,f0c8da964af2e49927972c237584994b8aca901b,1.0538885362620933e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-08 10:05:35+02:00
6,6c5e663747462817aa670b59addb191b618c5eb9,1.0486131941433996e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-10-11 17:32:29+03:00
6,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0512345397728495e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-10-26 12:21:19+03:00
6,aebf426ab3350d922e78442db19398914f4610aa,1.0437433957122266e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-07 20:09:02+02:00
6,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0374072189733852e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-10-13 12:22:38+03:00
6,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0344453585275916e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-12-16 18:54:08+02:00
6,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.039112339640269e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-06 16:07:52+02:00
6,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.043403972289525e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-05 13:28:47+02:00
6,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0427625056763644e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-06 14:04:38+02:00
6,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.051138315233402e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-06 16:27:06+02:00
6,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0463335456734058e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-04 16:51:55+02:00
6,cd7168bd9791c3c51875f85850371cec52a72e57,1.0454917173774447e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-21 16:23:44+02:00
6,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0443875908094924e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-12-22 12:07:50+02:00
6,33120fdaf85b81b29fda0b164e51a4d43a477810,1.037367655953858e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-22 17:15:00+02:00
6,de27eb5c5d71e31de1e07099cbea189952749079,1.051822164299665e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-08 10:07:16+02:00
6,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.048641115630744e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-21 22:39:05+02:00
6,9e87043b619778dee4903f22deeda35ed41af442,1.0571670827630442e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:02:15+02:00
6,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0497488801775036e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:02:28+02:00
6,dd91d2f5cb68a8ada87f47034162548dafa00053,1.048965259542456e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:02:45+02:00
6,bbd831ee1f05324f62486eca5ace30ed845111a7,1.050985974870855e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:21:55+02:00
6,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0389567250967955e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-12-12 14:47:03+02:00
6,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0544234100962058e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-12-16 13:05:50+02:00
6,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0511423170100898e-05,0,"An end user wants to know when an expression will always return empty due to table enforcement rule ( e.g primary/foreign key , CHECK constraint ) Minimal implementation : detect PKEY , FKEY and CHECK constraints",Detect implied expressions,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:37:52+00:00,2022-11-08 08:09:34+00:00,2022-12-02 19:51:33+02:00
8,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.046347551891813e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-09-25 06:01:08+00:00
8,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.2677113772951998e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-08 10:09:32+02:00
8,f0c8da964af2e49927972c237584994b8aca901b,1.049593720381381e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-08 10:05:35+02:00
8,6c5e663747462817aa670b59addb191b618c5eb9,1.0439314792165533e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-10-11 17:32:29+03:00
8,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0512085282243788e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-10-26 12:21:19+03:00
8,aebf426ab3350d922e78442db19398914f4610aa,1.0494755770196209e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-07 20:09:02+02:00
8,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0412141818960665e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-10-13 12:22:38+03:00
8,149f24e74104b324b62326453e7cbe12b53a5f5a,1.1123252988909371e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-12-16 18:54:08+02:00
8,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0410752111056354e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-06 16:07:52+02:00
8,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.5192780665529426e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-05 13:28:47+02:00
8,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0449823093949815e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-06 14:04:38+02:00
8,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.050620176101802e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-06 16:27:06+02:00
8,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.048545163939707e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-04 16:51:55+02:00
8,cd7168bd9791c3c51875f85850371cec52a72e57,1.0496787581359968e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-21 16:23:44+02:00
8,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.042526764649665e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-12-22 12:07:50+02:00
8,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0377001672168262e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-22 17:15:00+02:00
8,de27eb5c5d71e31de1e07099cbea189952749079,1.0475616363692096e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-08 10:07:16+02:00
8,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0355558515584562e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-21 22:39:05+02:00
8,9e87043b619778dee4903f22deeda35ed41af442,1.0504368219699243e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-21 12:02:15+02:00
8,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0582615686871575e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-21 12:02:28+02:00
8,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0233206012344452e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-21 12:02:45+02:00
8,bbd831ee1f05324f62486eca5ace30ed845111a7,1.032891759678023e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-11-21 12:21:55+02:00
8,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0271414794260636e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-12-12 14:47:03+02:00
8,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.7751986888470128e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-12-16 13:05:50+02:00
8,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0528277925914152e-05,0,"End user wants to know why their queries return empty . QEPs will detect these . Might be handy to also analyse SQL statements for expressions that always return false , since similar work is already done on # 7 . Minimal implementation : detect literal equality operations that are always false .",Detect inconsistent expressions,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:44:21+00:00,2022-12-10 14:52:56+00:00,2022-12-02 19:51:33+02:00
9,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0362720786361024e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-09-25 06:01:08+00:00
9,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0386248504801188e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-08 10:09:32+02:00
9,89f77867806bb11df2be061fb4e287ef3bedaf62,1.039517610479379e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-12-10 16:52:54+02:00
9,6c5e663747462817aa670b59addb191b618c5eb9,1.041097038978478e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-10-11 17:32:29+03:00
9,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0464892511663493e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-10-26 12:21:19+03:00
9,aebf426ab3350d922e78442db19398914f4610aa,1.037365655065514e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-07 20:09:02+02:00
9,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.032363888953114e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-10-13 12:22:38+03:00
9,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0314151950296946e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-12-16 18:54:08+02:00
9,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0319317880203016e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-06 16:07:52+02:00
9,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0384435881860554e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-05 13:28:47+02:00
9,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.033841817843495e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-06 14:04:38+02:00
9,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0441604899824595e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-06 16:27:06+02:00
9,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0362552529841196e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-04 16:51:55+02:00
9,cd7168bd9791c3c51875f85850371cec52a72e57,1.0394333912699947e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-21 16:23:44+02:00
9,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.036194953485392e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-12-22 12:07:50+02:00
9,33120fdaf85b81b29fda0b164e51a4d43a477810,1.03402908280259e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-22 17:15:00+02:00
9,de27eb5c5d71e31de1e07099cbea189952749079,1.033236549119465e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-08 10:07:16+02:00
9,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0409948117739988e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-21 22:39:05+02:00
9,9e87043b619778dee4903f22deeda35ed41af442,1.0419144928164314e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-21 12:02:15+02:00
9,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.039796188706532e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-21 12:02:28+02:00
9,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0353840480092911e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-21 12:02:45+02:00
9,bbd831ee1f05324f62486eca5ace30ed845111a7,1.036274989019148e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-11-21 12:21:55+02:00
9,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.03197708085645e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-12-12 14:47:03+02:00
9,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0432677299831994e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-12-16 13:05:50+02:00
9,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0438678145874292e-05,0,End user is confused why their query results are being strangely affected where no such thing should happen . Detect ORDER BY statements in subqueries . Minimal implementation : Detect an immediate subquery with ORDER BY statement,Detect ORDER BY in a subquery,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:47:47+00:00,2022-11-08 08:05:37+00:00,2022-12-02 19:51:33+02:00
10,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.05184526546509e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-09-25 06:01:08+00:00
10,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0461519195814615e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-08 10:09:32+02:00
10,89f77867806bb11df2be061fb4e287ef3bedaf62,1.058660291164415e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-12-10 16:52:54+02:00
10,f0c8da964af2e49927972c237584994b8aca901b,1.0626223229337484e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-08 10:05:35+02:00
10,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.057732788467547e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-10-26 12:21:19+03:00
10,aebf426ab3350d922e78442db19398914f4610aa,1.2799870091839692e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-07 20:09:02+02:00
10,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0493514309928289e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-10-13 12:22:38+03:00
10,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0294646926922724e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-12-16 18:54:08+02:00
10,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0450719855725764e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-06 16:07:52+02:00
10,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0433761417516507e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-06 14:04:38+02:00
10,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0491753528185654e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-06 16:27:06+02:00
10,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0593398656055795e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-04 16:51:55+02:00
10,cd7168bd9791c3c51875f85850371cec52a72e57,1.0305570867785718e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-21 16:23:44+02:00
10,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.454453195037786e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-12-22 12:07:50+02:00
10,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0372538781666664e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-22 17:15:00+02:00
10,de27eb5c5d71e31de1e07099cbea189952749079,1.0596884749247693e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-08 10:07:16+02:00
10,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.050240553013282e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-21 22:39:05+02:00
10,9e87043b619778dee4903f22deeda35ed41af442,1.0606156138237566e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:02:15+02:00
10,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0469583685335238e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:02:28+02:00
10,dd91d2f5cb68a8ada87f47034162548dafa00053,1.050089304044377e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:02:45+02:00
10,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0333174031984528e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:21:55+02:00
10,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.250886361958692e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-12-12 14:47:03+02:00
10,3d6dec83450eb47b7c1c89380c7d32be851a2780,4.577647632686421e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-12-16 13:05:50+02:00
10,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.064709977072198e-05,0,"See # 22 . Given SQL statement by the wrapper , produce a QEP wrapped in a data format ( classically a tree graph , but simpler format like list probably works here too ) that can be efficiently examined in semantic analysis . QEPs can be fetched in roughly following way :",Basic QEP parser module,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:52:46+00:00,2022-10-11 14:32:31+00:00,2022-12-02 19:51:33+02:00
11,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0541076335357502e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-09-25 06:01:08+00:00
11,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.06877905636793e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-08 10:09:32+02:00
11,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0502665645617526e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-12-10 16:52:54+02:00
11,f0c8da964af2e49927972c237584994b8aca901b,1.0511503205634654e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-08 10:05:35+02:00
11,6c5e663747462817aa670b59addb191b618c5eb9,1.0271003702655436e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-10-11 17:32:29+03:00
11,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.028857150231488e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-10-13 12:22:38+03:00
11,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0271572136844044e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-12-16 18:54:08+02:00
11,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0422206287330482e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-06 16:07:52+02:00
11,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0471161658642814e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-05 13:28:47+02:00
11,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0339601431041956e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-06 14:04:38+02:00
11,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0794866284413727e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-06 16:27:06+02:00
11,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.04821319837356e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-04 16:51:55+02:00
11,cd7168bd9791c3c51875f85850371cec52a72e57,1.0286648830515333e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-21 16:23:44+02:00
11,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.1443016774137504e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-12-22 12:07:50+02:00
11,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0264756383548956e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-22 17:15:00+02:00
11,de27eb5c5d71e31de1e07099cbea189952749079,1.0562218449194916e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-08 10:07:16+02:00
11,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0489972737559585e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-21 22:39:05+02:00
11,9e87043b619778dee4903f22deeda35ed41af442,1.0493024092284031e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-21 12:02:15+02:00
11,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.634659020055551e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-21 12:02:28+02:00
11,dd91d2f5cb68a8ada87f47034162548dafa00053,1.5850377167225815e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-21 12:02:45+02:00
11,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0536905392655171e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-11-21 12:21:55+02:00
11,535fdf800713ce7b74f1e330e9c02af0bb981db2,5.470063479151577e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-12-12 14:47:03+02:00
11,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.034695014823228e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-12-16 13:05:50+02:00
11,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.3721783943765333e-05,0,Integrate python-sqlparse for turning the SQL statement string into a data structure for efficient semantic analysis .,Basic SQL parser,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:55:17+00:00,2022-10-26 09:21:21+00:00,2022-12-02 19:51:33+02:00
12,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0424373613204809e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-09-25 06:01:08+00:00
12,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0359509360569064e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-08 10:09:32+02:00
12,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0353158359066583e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-12-10 16:52:54+02:00
12,f0c8da964af2e49927972c237584994b8aca901b,1.0494395610294305e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-08 10:05:35+02:00
12,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0414317330287304e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-10-26 12:21:19+03:00
12,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0360270607634448e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-10-13 12:22:38+03:00
12,149f24e74104b324b62326453e7cbe12b53a5f5a,1.020616946334485e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-12-16 18:54:08+02:00
12,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0320036381017417e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-06 16:07:52+02:00
12,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0395275239716284e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-06 14:04:38+02:00
12,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0588571058178786e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-06 16:27:06+02:00
12,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.043917563947616e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-04 16:51:55+02:00
12,cd7168bd9791c3c51875f85850371cec52a72e57,1.0467916581546888e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-21 16:23:44+02:00
12,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.1631121196842288e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-12-22 12:07:50+02:00
12,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0301374459231738e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-22 17:15:00+02:00
12,de27eb5c5d71e31de1e07099cbea189952749079,1.0240195479127578e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-08 10:07:16+02:00
12,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0472689609741792e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-21 22:39:05+02:00
12,9e87043b619778dee4903f22deeda35ed41af442,1.0481112440174911e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-21 12:02:15+02:00
12,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0370432391937356e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-21 12:02:28+02:00
12,dd91d2f5cb68a8ada87f47034162548dafa00053,1.042047642840771e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-21 12:02:45+02:00
12,bbd831ee1f05324f62486eca5ace30ed845111a7,2.2001358956913464e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-11-21 12:21:55+02:00
12,3d6dec83450eb47b7c1c89380c7d32be851a2780,5.377929119276814e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-12-16 13:05:50+02:00
12,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0582302820694167e-05,0,"Turn an SQL statement , its results , and a QEP into an insightful message to the user . # 6 # 7 # 8 # 9",Basic semantic analysis,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-23 11:57:31+00:00,2022-10-13 10:28:11+00:00,2022-12-02 19:51:33+02:00
14,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0478494004928509e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-09-25 06:01:08+00:00
14,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0474866940057836e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-08 10:09:32+02:00
14,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0431323971715756e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-12-10 16:52:54+02:00
14,f0c8da964af2e49927972c237584994b8aca901b,1.044225246005226e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-08 10:05:35+02:00
14,6c5e663747462817aa670b59addb191b618c5eb9,1.0444334293424616e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-10-11 17:32:29+03:00
14,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0437941455165856e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-10-26 12:21:19+03:00
14,aebf426ab3350d922e78442db19398914f4610aa,1.0391360774519852e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-07 20:09:02+02:00
14,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0384297638665885e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-10-13 12:22:38+03:00
14,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0172160727961456e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-12-16 18:54:08+02:00
14,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0356042366765903e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-06 16:07:52+02:00
14,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.04079035736504e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-05 13:28:47+02:00
14,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0447820386616511e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-06 14:04:38+02:00
14,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0466668754816055e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-06 16:27:06+02:00
14,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.040351708070375e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-04 16:51:55+02:00
14,cd7168bd9791c3c51875f85850371cec52a72e57,1.0464174010849092e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-21 16:23:44+02:00
14,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0404171916889028e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-12-22 12:07:50+02:00
14,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0304931493010372e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-22 17:15:00+02:00
14,de27eb5c5d71e31de1e07099cbea189952749079,1.0417277735541576e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-08 10:07:16+02:00
14,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0479753655090462e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-21 22:39:05+02:00
14,9e87043b619778dee4903f22deeda35ed41af442,1.0471081623109058e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-21 12:02:15+02:00
14,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0436169759486802e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-21 12:02:28+02:00
14,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0426640074001623e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-21 12:02:45+02:00
14,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0502064469619654e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-11-21 12:21:55+02:00
14,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0364974514232015e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-12-12 14:47:03+02:00
14,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0445051884744316e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-12-16 13:05:50+02:00
14,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0488091902516317e-05,0,"For proper modularisation , remove magic function/string from L87 and let class constructor choose it .",Add str- > str hook function parameter to Wrapper constructor,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-25 06:00:26+00:00,2022-10-11 13:58:22+00:00,2022-12-02 19:51:33+02:00
15,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0466828825883567e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-09-25 06:01:08+00:00
15,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.052460356731899e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-08 10:09:32+02:00
15,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0450570698594674e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-12-10 16:52:54+02:00
15,f0c8da964af2e49927972c237584994b8aca901b,1.0471201676409692e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-08 10:05:35+02:00
15,6c5e663747462817aa670b59addb191b618c5eb9,1.0470612323842944e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-10-11 17:32:29+03:00
15,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0468495929671915e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-10-26 12:21:19+03:00
15,aebf426ab3350d922e78442db19398914f4610aa,1.0400272913102526e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-07 20:09:02+02:00
15,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0275863132847007e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-12-16 18:54:08+02:00
15,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.035268451232696e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-06 16:07:52+02:00
15,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0383435437688604e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-05 13:28:47+02:00
15,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.038880418491317e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-06 14:04:38+02:00
15,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.045788849296514e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-06 16:27:06+02:00
15,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0385871973994654e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-04 16:51:55+02:00
15,cd7168bd9791c3c51875f85850371cec52a72e57,1.040213737724116e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-21 16:23:44+02:00
15,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0365814887336455e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-12-22 12:07:50+02:00
15,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0324702088837512e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-22 17:15:00+02:00
15,de27eb5c5d71e31de1e07099cbea189952749079,1.0463983926456422e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-08 10:07:16+02:00
15,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0464473234605975e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-21 22:39:05+02:00
15,9e87043b619778dee4903f22deeda35ed41af442,1.049161346600158e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-21 12:02:15+02:00
15,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0471351743035484e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-21 12:02:28+02:00
15,dd91d2f5cb68a8ada87f47034162548dafa00053,1.045645240083104e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-21 12:02:45+02:00
15,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0451059097249528e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-11-21 12:21:55+02:00
15,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0349318472435698e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-12-12 14:47:03+02:00
15,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.045134831656469e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-12-16 13:05:50+02:00
15,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.048923240887234e-05,0,"Add requirements.txt , directory structure , thought out main.py , etc .",Incorporate project template and a thought out main.py,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-25 13:26:43+00:00,2022-10-13 09:22:39+00:00,2022-12-02 19:51:33+02:00
17,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.044429427565774e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-09-25 06:01:08+00:00
17,89f77867806bb11df2be061fb4e287ef3bedaf62,1.110119956138078e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-12-10 16:52:54+02:00
17,f0c8da964af2e49927972c237584994b8aca901b,1.05642629932845e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-08 10:05:35+02:00
17,6c5e663747462817aa670b59addb191b618c5eb9,1.0581374226603655e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-10-11 17:32:29+03:00
17,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0504028068680782e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-10-26 12:21:19+03:00
17,aebf426ab3350d922e78442db19398914f4610aa,1.0447959539305884e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-07 20:09:02+02:00
17,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0337599633203354e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-10-13 12:22:38+03:00
17,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0370758900535291e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-12-16 18:54:08+02:00
17,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0369611118221655e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-06 16:07:52+02:00
17,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0457390089868568e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-05 13:28:47+02:00
17,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0417128578410484e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-06 14:04:38+02:00
17,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0593499609967694e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-06 16:27:06+02:00
17,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0464053957548458e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-04 16:51:55+02:00
17,cd7168bd9791c3c51875f85850371cec52a72e57,1.0434119758429006e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-21 16:23:44+02:00
17,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0461259989824612e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-12-22 12:07:50+02:00
17,33120fdaf85b81b29fda0b164e51a4d43a477810,1.032390537147876e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-22 17:15:00+02:00
17,de27eb5c5d71e31de1e07099cbea189952749079,1.0595803360047285e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-08 10:07:16+02:00
17,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0473008842382114e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-21 22:39:05+02:00
17,9e87043b619778dee4903f22deeda35ed41af442,1.0593216757115442e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:02:15+02:00
17,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0526430742174853e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:02:28+02:00
17,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0532315172895323e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:02:45+02:00
17,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0504508281883318e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-11-21 12:21:55+02:00
17,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0375477359048093e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-12-12 14:47:03+02:00
17,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0555299922998527e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-12-16 13:05:50+02:00
17,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0518201634113211e-05,0,Developer wants to detect implied ( enforce by database rules ) expressions # 6 . Accessing schemas is required,Get table/database schema assertions ( for e.g detecting implied expressions ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:50:51+00:00,2022-11-08 08:09:34+00:00,2022-12-02 19:51:33+02:00
18,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.035086825140752e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-09-25 06:01:08+00:00
18,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0444244253449142e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-08 10:09:32+02:00
18,89f77867806bb11df2be061fb4e287ef3bedaf62,1.04066721178242e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-12-10 16:52:54+02:00
18,f0c8da964af2e49927972c237584994b8aca901b,1.0430559086671565e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-08 10:05:35+02:00
18,6c5e663747462817aa670b59addb191b618c5eb9,1.042318035615608e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-10-11 17:32:29+03:00
18,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0385416317149064e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-10-26 12:21:19+03:00
18,aebf426ab3350d922e78442db19398914f4610aa,1.0170278983423486e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-07 20:09:02+02:00
18,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0358590770920271e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-10-13 12:22:38+03:00
18,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0319799912394956e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-06 16:07:52+02:00
18,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0346594535803888e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-05 13:28:47+02:00
18,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0393798220320605e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-06 14:04:38+02:00
18,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.042836083797738e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-06 16:27:06+02:00
18,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0392747753940055e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-04 16:51:55+02:00
18,cd7168bd9791c3c51875f85850371cec52a72e57,1.0383911103417631e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-21 16:23:44+02:00
18,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0345509508624671e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-12-22 12:07:50+02:00
18,33120fdaf85b81b29fda0b164e51a4d43a477810,1.030194471240975e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-22 17:15:00+02:00
18,de27eb5c5d71e31de1e07099cbea189952749079,1.0400996870885136e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-08 10:07:16+02:00
18,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.04342188933515e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-21 22:39:05+02:00
18,9e87043b619778dee4903f22deeda35ed41af442,1.047254954755772e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-21 12:02:15+02:00
18,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0423686944704968e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-21 12:02:28+02:00
18,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0421371371194256e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-21 12:02:45+02:00
18,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0404410204500891e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-11-21 12:21:55+02:00
18,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0305757314199582e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-12-12 14:47:03+02:00
18,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0435423064336646e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-12-16 13:05:50+02:00
18,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0475137059984265e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for semantic analysis,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:55:51+00:00,2022-11-10 10:38:14+00:00,2022-12-02 19:51:33+02:00
19,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0371974894951563e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-09-25 06:01:08+00:00
19,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0456861673446838e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-08 10:09:32+02:00
19,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0394650416856166e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-12-10 16:52:54+02:00
19,f0c8da964af2e49927972c237584994b8aca901b,1.0403417945781255e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-08 10:05:35+02:00
19,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.037518995872233e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-10-26 12:21:19+03:00
19,aebf426ab3350d922e78442db19398914f4610aa,1.033588432619581e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-07 20:09:02+02:00
19,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0267976904287934e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-10-13 12:22:38+03:00
19,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0179264791077005e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-12-16 18:54:08+02:00
19,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.030988642014563e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-06 16:07:52+02:00
19,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.037813945004018e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-05 13:28:47+02:00
19,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0384198503743391e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-06 14:04:38+02:00
19,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0405065040686168e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-06 16:27:06+02:00
19,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0364045010646803e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-04 16:51:55+02:00
19,cd7168bd9791c3c51875f85850371cec52a72e57,1.0379029845353216e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-21 16:23:44+02:00
19,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.040758525050478e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-12-22 12:07:50+02:00
19,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0301551810698584e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-22 17:15:00+02:00
19,de27eb5c5d71e31de1e07099cbea189952749079,1.0389002454758156e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-08 10:07:16+02:00
19,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0419503269076811e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-21 22:39:05+02:00
19,9e87043b619778dee4903f22deeda35ed41af442,1.0446256965224164e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-21 12:02:15+02:00
19,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.040684128383873e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-21 12:02:28+02:00
19,dd91d2f5cb68a8ada87f47034162548dafa00053,1.04128275779658e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-21 12:02:45+02:00
19,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0395800927653909e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-11-21 12:21:55+02:00
19,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0314575774827972e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-12-12 14:47:03+02:00
19,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0281401955580804e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-12-16 13:05:50+02:00
19,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0473399015609177e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in wiki .,Document architecture and interfaces for QEP parser,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:56:52+00:00,2022-11-10 10:38:31+00:00,2022-12-02 19:51:33+02:00
20,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.03941547422437e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-09-25 06:01:08+00:00
20,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.1386214282538276e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-08 10:09:32+02:00
20,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0447122804180252e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-12-10 16:52:54+02:00
20,f0c8da964af2e49927972c237584994b8aca901b,1.0477165233169217e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-08 10:05:35+02:00
20,6c5e663747462817aa670b59addb191b618c5eb9,1.032340333040338e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-10-11 17:32:29+03:00
20,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0214894246018956e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-10-26 12:21:19+03:00
20,aebf426ab3350d922e78442db19398914f4610aa,1.0309689969290048e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-07 20:09:02+02:00
20,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.024547054839786e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-10-13 12:22:38+03:00
20,149f24e74104b324b62326453e7cbe12b53a5f5a,2.413644688203931e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-12-16 18:54:08+02:00
20,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0349249350838363e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-06 16:07:52+02:00
20,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0367544746259227e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-05 13:28:47+02:00
20,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.03869224403752e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-06 14:04:38+02:00
20,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0452653441461734e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-06 16:27:06+02:00
20,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0412251867819576e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-04 16:51:55+02:00
20,cd7168bd9791c3c51875f85850371cec52a72e57,1.0448577086208388e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-21 16:23:44+02:00
20,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0297043445461895e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-12-22 12:07:50+02:00
20,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0269818631059024e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-22 17:15:00+02:00
20,de27eb5c5d71e31de1e07099cbea189952749079,1.0471391760802362e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-08 10:07:16+02:00
20,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0453680260980036e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-21 22:39:05+02:00
20,9e87043b619778dee4903f22deeda35ed41af442,1.0472060239408164e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-21 12:02:15+02:00
20,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0425686014059464e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-21 12:02:28+02:00
20,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0444672625453675e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-21 12:02:45+02:00
20,bbd831ee1f05324f62486eca5ace30ed845111a7,1.045411863742629e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-11-21 12:21:55+02:00
20,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0184750863118095e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-12-12 14:47:03+02:00
20,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0415370525151957e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-12-16 13:05:50+02:00
20,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.046275701810373e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document them in GitHub wiki .,Document architecture and interfaces for SQL statement & results parsers,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:58:09+00:00,2022-11-10 10:38:51+00:00,2022-12-02 19:51:33+02:00
21,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0435841431899462e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-09-25 06:01:08+00:00
21,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0435373042128049e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-08 10:09:32+02:00
21,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0401493454992304e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-12-10 16:52:54+02:00
21,f0c8da964af2e49927972c237584994b8aca901b,1.043220891006058e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-08 10:05:35+02:00
21,6c5e663747462817aa670b59addb191b618c5eb9,1.0400005521660203e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-10-11 17:32:29+03:00
21,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0375269994256088e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-10-26 12:21:19+03:00
21,aebf426ab3350d922e78442db19398914f4610aa,1.0370215022703633e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-07 20:09:02+02:00
21,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0324958566343412e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-10-13 12:22:38+03:00
21,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0153106813959312e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-12-16 18:54:08+02:00
21,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.032024283631472e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-06 16:07:52+02:00
21,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0347552233724857e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-05 13:28:47+02:00
21,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0384425877418836e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-06 14:04:38+02:00
21,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0424910215078851e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-06 16:27:06+02:00
21,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.037900074152276e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-04 16:51:55+02:00
21,cd7168bd9791c3c51875f85850371cec52a72e57,1.0411943549115676e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-21 16:23:44+02:00
21,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0333351383451372e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-12-22 12:07:50+02:00
21,33120fdaf85b81b29fda0b164e51a4d43a477810,1.031173269439023e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-22 17:15:00+02:00
21,de27eb5c5d71e31de1e07099cbea189952749079,1.0399409802630544e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-08 10:07:16+02:00
21,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0417853445687795e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-21 22:39:05+02:00
21,9e87043b619778dee4903f22deeda35ed41af442,1.0444991858094e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-21 12:02:15+02:00
21,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.040052120515611e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-21 12:02:28+02:00
21,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0405431567050982e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-21 12:02:45+02:00
21,bbd831ee1f05324f62486eca5ace30ed845111a7,1.040683127939701e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-11-21 12:21:55+02:00
21,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0319839930161834e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-12-12 14:47:03+02:00
21,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.043256725097308e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-12-16 13:05:50+02:00
21,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.047731529979501e-05,0,Design required classes and interfaces according to SOLID principles and potentially GoF design patterns . Document in GitHub wiki,Document architecture and interfaces for the wrapper,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 09:58:46+00:00,2022-11-10 10:37:40+00:00,2022-12-02 19:51:33+02:00
22,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0408697562525047e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-09-25 06:01:08+00:00
22,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0484392078069504e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-08 10:09:32+02:00
22,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0547673809924165e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-12-10 16:52:54+02:00
22,f0c8da964af2e49927972c237584994b8aca901b,1.0530929102969822e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-08 10:05:35+02:00
22,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0494815796846524e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-10-26 12:21:19+03:00
22,aebf426ab3350d922e78442db19398914f4610aa,1.0382762411609292e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-07 20:09:02+02:00
22,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.03405473055318e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-10-13 12:22:38+03:00
22,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0302229384251405e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-12-16 18:54:08+02:00
22,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0430200745759066e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-06 16:07:52+02:00
22,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0442133316246329e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-06 14:04:38+02:00
22,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0507164006412497e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-06 16:27:06+02:00
22,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0532868145674e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-04 16:51:55+02:00
22,cd7168bd9791c3c51875f85850371cec52a72e57,1.0495917194930373e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-21 16:23:44+02:00
22,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0276020475430414e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-12-22 12:07:50+02:00
22,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0328513781132642e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-22 17:15:00+02:00
22,de27eb5c5d71e31de1e07099cbea189952749079,1.051401977747446e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-08 10:07:16+02:00
22,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.053076903190231e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-21 22:39:05+02:00
22,9e87043b619778dee4903f22deeda35ed41af442,1.0545360055402853e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:02:15+02:00
22,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0589166777208447e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:02:28+02:00
22,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0546888915996531e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:02:45+02:00
22,bbd831ee1f05324f62486eca5ace30ed845111a7,2.516806307539809e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-11-21 12:21:55+02:00
22,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.3931660760135856e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-12-12 14:47:03+02:00
22,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0600948371575214e-05,0,See # 10 Look into psql output given ` explain analyze ` with potential machine-readable formatting options .,Analyze QEP format,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-09-29 10:32:05+00:00,2022-10-11 14:32:31+00:00,2022-12-02 19:51:33+02:00
27,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0477394425834063e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-09-25 06:01:08+00:00
27,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0512145308894104e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-08 10:09:32+02:00
27,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0482742254680488e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-12-10 16:52:54+02:00
27,f0c8da964af2e49927972c237584994b8aca901b,1.0468905202287717e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-08 10:05:35+02:00
27,6c5e663747462817aa670b59addb191b618c5eb9,1.0439106517878828e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-10-11 17:32:29+03:00
27,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0469114386069124e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-10-26 12:21:19+03:00
27,aebf426ab3350d922e78442db19398914f4610aa,1.039112339640269e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-07 20:09:02+02:00
27,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.035675268212799e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-10-13 12:22:38+03:00
27,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0336169907532168e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-12-16 18:54:08+02:00
27,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0399241546110716e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-05 13:28:47+02:00
27,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0406255569250789e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-06 14:04:38+02:00
27,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0513708730286451e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-06 16:27:06+02:00
27,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.04494547485956e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-04 16:51:55+02:00
27,cd7168bd9791c3c51875f85850371cec52a72e57,1.0479473530722316e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-21 16:23:44+02:00
27,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0429703252157196e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-12-22 12:07:50+02:00
27,33120fdaf85b81b29fda0b164e51a4d43a477810,1.02933518064674e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-22 17:15:00+02:00
27,de27eb5c5d71e31de1e07099cbea189952749079,1.0484732229087967e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-08 10:07:16+02:00
27,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0453840332047548e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-21 22:39:05+02:00
27,9e87043b619778dee4903f22deeda35ed41af442,1.0549011676630473e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-21 12:02:15+02:00
27,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0525878678890876e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-21 12:02:28+02:00
27,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0513468623685183e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-21 12:02:45+02:00
27,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0499880772840696e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-11-21 12:21:55+02:00
27,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.039284688886255e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-12-12 14:47:03+02:00
27,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0504148121981416e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-12-16 13:05:50+02:00
27,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0535368346609175e-05,0,Related to # 5,"Create FSM for interpreting control codes induced by e.g . up-/down-arrows , ctrl-R and backspace",Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-07 08:29:54+00:00,2022-11-06 14:07:53+00:00,2022-12-02 19:51:33+02:00
33,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0443198334542105e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-09-25 06:01:08+00:00
33,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0541840310906991e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-08 10:09:32+02:00
33,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0471281711943448e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-12-10 16:52:54+02:00
33,f0c8da964af2e49927972c237584994b8aca901b,1.0463215403433423e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-08 10:05:35+02:00
33,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0448826287756674e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-10-26 12:21:19+03:00
33,aebf426ab3350d922e78442db19398914f4610aa,1.0347808711230757e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-07 20:09:02+02:00
33,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0304951501893813e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-10-13 12:22:38+03:00
33,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0341415872971991e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-12-16 18:54:08+02:00
33,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0362414286646526e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-06 16:07:52+02:00
33,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0389983799541367e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-06 14:04:38+02:00
33,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0477365322003608e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-06 16:27:06+02:00
33,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.044943473971216e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-04 16:51:55+02:00
33,cd7168bd9791c3c51875f85850371cec52a72e57,1.0445090993016493e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-21 16:23:44+02:00
33,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0459613804414404e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-12-22 12:07:50+02:00
33,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0300058420398273e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-22 17:15:00+02:00
33,de27eb5c5d71e31de1e07099cbea189952749079,1.044653618009761e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-08 10:07:16+02:00
33,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0490322893019766e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-21 22:39:05+02:00
33,9e87043b619778dee4903f22deeda35ed41af442,1.0481632671144324e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-21 12:02:15+02:00
33,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0467018000781536e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-21 12:02:28+02:00
33,dd91d2f5cb68a8ada87f47034162548dafa00053,1.044941473082872e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-21 12:02:45+02:00
33,bbd831ee1f05324f62486eca5ace30ed845111a7,1.04900327642099e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-11-21 12:21:55+02:00
33,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.086003248929046e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-12-12 14:47:03+02:00
33,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0436448064865544e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-12-16 13:05:50+02:00
33,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0501694305276033e-05,0,Allow a visitor ( ? ) pattern for passing custom functions to examine tree structure for semantic analysis,Extend QEPAnalysis interface for easier analysis,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-13 10:05:14+00:00,2022-11-10 10:55:29+00:00,2022-12-02 19:51:33+02:00
34,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0559106158325449e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-09-25 06:01:08+00:00
34,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.042785333993379e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-08 10:09:32+02:00
34,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0504418241907842e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-12-10 16:52:54+02:00
34,f0c8da964af2e49927972c237584994b8aca901b,1.0554112122918012e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-08 10:05:35+02:00
34,6c5e663747462817aa670b59addb191b618c5eb9,2.8998474590480328e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-10-11 17:32:29+03:00
34,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0526912774366792e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-10-26 12:21:19+03:00
34,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0452424248796888e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-10-13 12:22:38+03:00
34,149f24e74104b324b62326453e7cbe12b53a5f5a,1.045734006765997e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-12-16 18:54:08+02:00
34,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0468405889696442e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-06 16:07:52+02:00
34,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0467617357790004e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-05 13:28:47+02:00
34,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0408895832370035e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-06 14:04:38+02:00
34,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0438936442369595e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-06 16:27:06+02:00
34,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0481172466825228e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-04 16:51:55+02:00
34,cd7168bd9791c3c51875f85850371cec52a72e57,1.0515263966226485e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-21 16:23:44+02:00
34,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0369225492468104e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-12-22 12:07:50+02:00
34,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0386744179413654e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-22 17:15:00+02:00
34,de27eb5c5d71e31de1e07099cbea189952749079,1.03592719824519e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-08 10:07:16+02:00
34,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.04593045762158e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-21 22:39:05+02:00
34,9e87043b619778dee4903f22deeda35ed41af442,1.0521132026042324e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-21 12:02:15+02:00
34,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.056992641679244e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-21 12:02:28+02:00
34,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0502064469619654e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-21 12:02:45+02:00
34,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0270278835378122e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-11-21 12:21:55+02:00
34,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.1866608474520037e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-12-12 14:47:03+02:00
34,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.050072296493454e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-12-16 13:05:50+02:00
34,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.053667438100092e-05,0,"A router class that receives a package of parsed QEP , SQL statements , and PSQL connection . Semantic analysis can independently fetch query results and table constraints using the connection if needed . Router then does classification of error types using trivial heuristics , to avoid performance penalty of using every deep analysis method on each query , and then passes the data for further analysis . Gathering the resulting analysis outcomes and associated messages , it passes a select message ( e.g from first positive analysis ) back to the psql interface .",A classification router for semantic analysis,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-13 10:10:22+00:00,2022-12-12 12:49:06+00:00,2022-12-02 19:51:33+02:00
37,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.043804149958305e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-09-25 06:01:08+00:00
37,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.051848266797606e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-08 10:09:32+02:00
37,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0528217899263836e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-12-10 16:52:54+02:00
37,f0c8da964af2e49927972c237584994b8aca901b,1.0546003977651708e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-08 10:05:35+02:00
37,6c5e663747462817aa670b59addb191b618c5eb9,2.000329732254613e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-10-11 17:32:29+03:00
37,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.046880515787052e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-10-26 12:21:19+03:00
37,aebf426ab3350d922e78442db19398914f4610aa,1.048193280439591e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-07 20:09:02+02:00
37,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0351756827731153e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-10-13 12:22:38+03:00
37,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0355943231843412e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-12-16 18:54:08+02:00
37,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0354294317949098e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-06 16:07:52+02:00
37,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,3.743495472008362e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-05 13:28:47+02:00
37,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0419801583338996e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-06 14:04:38+02:00
37,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0506572834856344e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-06 16:27:06+02:00
37,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0501373253646308e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-04 16:51:55+02:00
37,cd7168bd9791c3c51875f85850371cec52a72e57,1.044515101966681e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-21 16:23:44+02:00
37,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0493954505363943e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-12-22 12:07:50+02:00
37,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0349949661758728e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-22 17:15:00+02:00
37,de27eb5c5d71e31de1e07099cbea189952749079,1.0562278475845233e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-08 10:07:16+02:00
37,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0463036232977174e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-21 22:39:05+02:00
37,9e87043b619778dee4903f22deeda35ed41af442,1.0548206773819402e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-21 12:02:15+02:00
37,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.051140316121746e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-21 12:02:28+02:00
37,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0497597941139247e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-21 12:02:45+02:00
37,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0453521099407226e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-11-21 12:21:55+02:00
37,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0399876373412552e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-12-12 14:47:03+02:00
37,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.05643130154931e-05,0,qepparser needs to use SET constraint_exclusion = 'on ' before doing its queries . This makes # 6 trivial search for One-Time Filter 's from the QEP .,constraint_exclusion option for qepparser,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-25 08:51:21+00:00,2022-11-05 11:28:49+00:00,2022-12-02 19:51:33+02:00
39,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0370165000495035e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-09-25 06:01:08+00:00
39,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0449115507071838e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-08 10:09:32+02:00
39,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0423627827549352e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-12-10 16:52:54+02:00
39,f0c8da964af2e49927972c237584994b8aca901b,1.042931489791954e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-08 10:05:35+02:00
39,6c5e663747462817aa670b59addb191b618c5eb9,1.256445739272749e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-10-11 17:32:29+03:00
39,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0398388440080453e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-10-26 12:21:19+03:00
39,aebf426ab3350d922e78442db19398914f4610aa,1.0375002602813764e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-07 20:09:02+02:00
39,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.037870333675528e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-10-13 12:22:38+03:00
39,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0336090781493112e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-12-16 18:54:08+02:00
39,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0306867807230446e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-06 16:07:52+02:00
39,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.049429556587711e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-05 13:28:47+02:00
39,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.042002986650914e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-06 14:04:38+02:00
39,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0438618119223976e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-06 16:27:06+02:00
39,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.042981239152141e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-04 16:51:55+02:00
39,cd7168bd9791c3c51875f85850371cec52a72e57,1.0380881576566026e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-21 16:23:44+02:00
39,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0356792699894868e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-12-22 12:07:50+02:00
39,33120fdaf85b81b29fda0b164e51a4d43a477810,1.02872472780291e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-22 17:15:00+02:00
39,de27eb5c5d71e31de1e07099cbea189952749079,1.0416293662274256e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-08 10:07:16+02:00
39,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.04231903605978e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-21 22:39:05+02:00
39,9e87043b619778dee4903f22deeda35ed41af442,1.0460222256369889e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-21 12:02:15+02:00
39,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0437244782224298e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-21 12:02:28+02:00
39,dd91d2f5cb68a8ada87f47034162548dafa00053,1.043703559844289e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-21 12:02:45+02:00
39,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0385337191110011e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-11-21 12:21:55+02:00
39,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0402881343907213e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-12-12 14:47:03+02:00
39,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0253426808048973e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-12-16 13:05:50+02:00
39,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0467088031873573e-05,0,Find out patterns in QEPs that allow detection of aforementioned errors . Use PostgreSQL documentation and the Telegram/Teams channel for help .,Error analysis for pattern violation errors 28-31,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-26 09:59:00+00:00,2022-11-08 08:09:35+00:00,2022-12-02 19:51:33+02:00
42,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.039068683894584e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-09-25 06:01:08+00:00
42,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0471520909050014e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-08 10:09:32+02:00
42,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0405819011793938e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-12-10 16:52:54+02:00
42,f0c8da964af2e49927972c237584994b8aca901b,1.0475077033333946e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-08 10:05:35+02:00
42,6c5e663747462817aa670b59addb191b618c5eb9,1.0452524293214084e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-10-11 17:32:29+03:00
42,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0471081623109058e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-10-26 12:21:19+03:00
42,aebf426ab3350d922e78442db19398914f4610aa,1.0384802408225369e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-07 20:09:02+02:00
42,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0234552064503076e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-10-13 12:22:38+03:00
42,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0151586138817947e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-12-16 18:54:08+02:00
42,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0318205568182748e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-06 16:07:52+02:00
42,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.481595609220676e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-05 13:28:47+02:00
42,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0514942005102055e-05,0,Pull request incoming,Improve CI/CD pipeline,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-06 16:27:06+02:00
42,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0467846550454851e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-04 16:51:55+02:00
42,cd7168bd9791c3c51875f85850371cec52a72e57,1.0435811418574303e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-21 16:23:44+02:00
42,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0407089575892314e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-12-22 12:07:50+02:00
42,33120fdaf85b81b29fda0b164e51a4d43a477810,1.1124079719593284e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-22 17:15:00+02:00
42,de27eb5c5d71e31de1e07099cbea189952749079,1.0471560926816892e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-08 10:07:16+02:00
42,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0416164514026605e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-21 22:39:05+02:00
42,9e87043b619778dee4903f22deeda35ed41af442,1.046918441716116e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-21 12:02:15+02:00
42,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.051691833708901e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-21 12:02:28+02:00
42,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0481072422408031e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-21 12:02:45+02:00
42,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0422484592709225e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-11-21 12:21:55+02:00
42,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.044783948600525e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-12-12 14:47:03+02:00
42,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0498429219296668e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-12-16 13:05:50+02:00
42,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.05280969364685e-05,0,Pull request incoming,Improve CI/CD pipeline,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-10-26 10:02:30+00:00,2022-11-06 12:04:39+00:00,2022-12-02 19:51:33+02:00
45,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0267762263538316e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-09-25 06:01:08+00:00
45,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0471990208316129e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-08 10:09:32+02:00
45,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0482852303539404e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-12-10 16:52:54+02:00
45,f0c8da964af2e49927972c237584994b8aca901b,1.0496637514734177e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-08 10:05:35+02:00
45,6c5e663747462817aa670b59addb191b618c5eb9,1.0360645319451578e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-10-11 17:32:29+03:00
45,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0456930795044173e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-10-26 12:21:19+03:00
45,aebf426ab3350d922e78442db19398914f4610aa,1.048763169819722e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-07 20:09:02+02:00
45,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0424055290059188e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-10-13 12:22:38+03:00
45,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0309227036486844e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-12-16 18:54:08+02:00
45,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0369521987740882e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-06 16:07:52+02:00
45,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0435493095428685e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-05 13:28:47+02:00
45,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0423537787573878e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-06 14:04:38+02:00
45,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.045273347699549e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-04 16:51:55+02:00
45,cd7168bd9791c3c51875f85850371cec52a72e57,1.0441087397339288e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-21 16:23:44+02:00
45,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0394095625088084e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-12-22 12:07:50+02:00
45,33120fdaf85b81b29fda0b164e51a4d43a477810,1.036831599776633e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-22 17:15:00+02:00
45,de27eb5c5d71e31de1e07099cbea189952749079,1.0463794751558453e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-08 10:07:16+02:00
45,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0477385330887046e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-21 22:39:05+02:00
45,9e87043b619778dee4903f22deeda35ed41af442,1.0498279152670875e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-21 12:02:15+02:00
45,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.050853643391747e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-21 12:02:28+02:00
45,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0450669833517168e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-21 12:02:45+02:00
45,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0428390851302538e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-11-21 12:21:55+02:00
45,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0387902875663713e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-12-12 14:47:03+02:00
45,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0478784133738372e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-12-16 13:05:50+02:00
45,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0498449228180108e-05,0,Current implementation uses hardcoded parameters for these . Pexpect could be used to get at least the username . It could be that we will have to analyse the command-line arguments or environmental variables for other parameters .,"Pass real PostgresSQL username , port , host , and password to psycopg",Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-03 10:08:27+00:00,2022-11-07 07:42:45+00:00,2022-12-02 19:51:33+02:00
47,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0303929229849018e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-09-25 06:01:08+00:00
47,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0403238775325008e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-08 10:09:32+02:00
47,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0413880772830453e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-12-10 16:52:54+02:00
47,f0c8da964af2e49927972c237584994b8aca901b,1.0475496310391463e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-08 10:05:35+02:00
47,6c5e663747462817aa670b59addb191b618c5eb9,1.0404697604826652e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-10-11 17:32:29+03:00
47,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0424234460515436e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-10-26 12:21:19+03:00
47,aebf426ab3350d922e78442db19398914f4610aa,1.0332189049222508e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-07 20:09:02+02:00
47,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0319426110072529e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-10-13 12:22:38+03:00
47,149f24e74104b324b62326453e7cbe12b53a5f5a,2.8367023332975805e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-12-16 18:54:08+02:00
47,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0299675523128826e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-06 16:07:52+02:00
47,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.031049578159582e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-05 13:28:47+02:00
47,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.034184970194474e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-06 14:04:38+02:00
47,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0446765372762457e-05,0,,Detect compare different domains error ( e31 per Brass ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-06 16:27:06+02:00
47,cd7168bd9791c3c51875f85850371cec52a72e57,1.0396098332421388e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-21 16:23:44+02:00
47,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0359765838074964e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-12-22 12:07:50+02:00
47,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0291928447259124e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-22 17:15:00+02:00
47,de27eb5c5d71e31de1e07099cbea189952749079,1.0362167813582346e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-08 10:07:16+02:00
47,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.039768449118128e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-21 22:39:05+02:00
47,9e87043b619778dee4903f22deeda35ed41af442,1.0512776498217136e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-21 12:02:15+02:00
47,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0514611858525312e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-21 12:02:28+02:00
47,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0475247108843178e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-21 12:02:45+02:00
47,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0489412488823293e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-11-21 12:21:55+02:00
47,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0604780982248483e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-12-16 13:05:50+02:00
47,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.049283400789136e-05,0,,Detect compare different domains error ( e31 per Brass ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-04 12:12:28+00:00,2022-11-04 14:51:56+00:00,2022-12-02 19:51:33+02:00
49,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0490292879694609e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-09-25 06:01:08+00:00
49,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0523158380237874e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-08 10:09:32+02:00
49,89f77867806bb11df2be061fb4e287ef3bedaf62,1.053621235769242e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-12-10 16:52:54+02:00
49,f0c8da964af2e49927972c237584994b8aca901b,1.052116112987278e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-08 10:05:35+02:00
49,6c5e663747462817aa670b59addb191b618c5eb9,1.048607191478368e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-10-11 17:32:29+03:00
49,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0362464308855124e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-10-26 12:21:19+03:00
49,aebf426ab3350d922e78442db19398914f4610aa,1.04351947811665e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-07 20:09:02+02:00
49,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0363096407672856e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-10-13 12:22:38+03:00
49,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0417307748866731e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-12-16 18:54:08+02:00
49,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0409193237137517e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-06 16:07:52+02:00
49,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0492914043425117e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-05 13:28:47+02:00
49,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0412887604616117e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-06 14:04:38+02:00
49,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0493344234419055e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-06 16:27:06+02:00
49,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0457749340275768e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-04 16:51:55+02:00
49,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0300353096681649e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-12-22 12:07:50+02:00
49,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0375932106398976e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-22 17:15:00+02:00
49,de27eb5c5d71e31de1e07099cbea189952749079,1.0425307664263528e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-08 10:07:16+02:00
49,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0458157703396864e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-21 22:39:05+02:00
49,9e87043b619778dee4903f22deeda35ed41af442,1.051734943757765e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-21 12:02:15+02:00
49,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0462496902619025e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-21 12:02:28+02:00
49,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0487371582712512e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-21 12:02:45+02:00
49,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0476475836185273e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-11-21 12:21:55+02:00
49,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0452803508087529e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-12-12 14:47:03+02:00
49,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.049615730153164e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-12-16 13:05:50+02:00
49,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0498249139345717e-05,0,"Wrapper has 2 significant bugs left : - parse multiline queries properly ( ` db= > SELECT db- > db- > * FROM orders ; ` ) - separate queries properly ( ` db= > SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` should not parse as ` SELECT * FROM orders ; db= > INSERT INTO queries VALUES ( 6,6,6 ) ; ` ) due to lazily sticking to SELECT as the delimiter .","Multiline queries , detect separate queries",Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-04 15:31:55+00:00,2022-11-21 14:23:46+00:00,2022-12-02 19:51:33+02:00
52,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0354146070312709e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-09-25 06:01:08+00:00
52,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0541750270931516e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-08 10:09:32+02:00
52,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0544596079853363e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-12-10 16:52:54+02:00
52,f0c8da964af2e49927972c237584994b8aca901b,1.0521092008275446e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-08 10:05:35+02:00
52,6c5e663747462817aa670b59addb191b618c5eb9,1.0491373359400312e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-10-11 17:32:29+03:00
52,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0477135219844058e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-10-26 12:21:19+03:00
52,aebf426ab3350d922e78442db19398914f4610aa,1.040260394802317e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-07 20:09:02+02:00
52,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.030917792377295e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-10-13 12:22:38+03:00
52,149f24e74104b324b62326453e7cbe12b53a5f5a,1.338785205007298e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-12-16 18:54:08+02:00
52,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0404469321656508e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-06 16:07:52+02:00
52,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.031928877637256e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-05 13:28:47+02:00
52,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0455106348672416e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-06 14:04:38+02:00
52,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0530638064665254e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-06 16:27:06+02:00
52,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0531391126278322e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-04 16:51:55+02:00
52,cd7168bd9791c3c51875f85850371cec52a72e57,1.0466469575476369e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-21 16:23:44+02:00
52,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0382722393842414e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-22 17:15:00+02:00
52,de27eb5c5d71e31de1e07099cbea189952749079,1.0446446140122134e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-08 10:07:16+02:00
52,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0441784979775548e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-21 22:39:05+02:00
52,9e87043b619778dee4903f22deeda35ed41af442,1.0534846296650358e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-21 12:02:15+02:00
52,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.055958910001209e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-21 12:02:28+02:00
52,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0534564353292808e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-21 12:02:45+02:00
52,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0483421647222713e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-11-21 12:21:55+02:00
52,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0447661225043705e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-12-12 14:47:03+02:00
52,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0538704373175278e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-12-16 13:05:50+02:00
52,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.057823646988254e-05,0,To be discussed in sprint planning,Adding automatic formatter to development pipeline,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-06 11:25:40+00:00,2022-12-22 10:07:51+00:00,2022-12-02 19:51:33+02:00
54,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0816177564265672e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-09-25 06:01:08+00:00
54,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.4067371012060905e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-08 10:09:32+02:00
54,89f77867806bb11df2be061fb4e287ef3bedaf62,1.2708500435110182e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-12-10 16:52:54+02:00
54,f0c8da964af2e49927972c237584994b8aca901b,1.3096697330183815e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-08 10:05:35+02:00
54,6c5e663747462817aa670b59addb191b618c5eb9,1.0875932275666855e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-10-11 17:32:29+03:00
54,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.059461101249326e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-10-26 12:21:19+03:00
54,aebf426ab3350d922e78442db19398914f4610aa,1.0485321581654716e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-07 20:09:02+02:00
54,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.3727202713198494e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-10-13 12:22:38+03:00
54,149f24e74104b324b62326453e7cbe12b53a5f5a,1.2605923984665424e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-12-16 18:54:08+02:00
54,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0668708455341402e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-06 16:07:52+02:00
54,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.2753532246279065e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-05 13:28:47+02:00
54,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.1932861525565386e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-06 14:04:38+02:00
54,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.1648970939859282e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-06 16:27:06+02:00
54,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.1922703379241284e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-04 16:51:55+02:00
54,cd7168bd9791c3c51875f85850371cec52a72e57,1.288753264816478e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-21 16:23:44+02:00
54,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0676472811610438e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-12-22 12:07:50+02:00
54,de27eb5c5d71e31de1e07099cbea189952749079,1.2792658708349336e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-08 10:07:16+02:00
54,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.099398923543049e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-21 22:39:05+02:00
54,9e87043b619778dee4903f22deeda35ed41af442,1.252700894838199e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-21 12:02:15+02:00
54,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.24174393931753e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-21 12:02:28+02:00
54,dd91d2f5cb68a8ada87f47034162548dafa00053,1.2012626029900275e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-21 12:02:45+02:00
54,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0408021807961632e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-11-21 12:21:55+02:00
54,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0252653737552464e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-12-12 14:47:03+02:00
54,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0692358046071604e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-12-16 13:05:50+02:00
54,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.024538232741179e-05,0,"Upon push to ` main ` branch < sup > 1 < /sup > , we should - enact sensible versioning < sup > 2 < /sup > - only deploy versions that pass tests - have automatic formation of changelog - upload to PyPI , TestPyPI , or equivalent < sup > 3 < /sup > - have uploaded a version that an end user can install with a clean installation of Python 3.10+ , e.g . by running ` pip install pg4n ` or equivalent < sup > 4 < /sup > - as per good programming practices , ` pg4n -h ` or ` pg4n -- help ` should give info required to get pg4n running < sup > 1 < /sup > Alternative strategy : push only releases/tags ? < sup > 2 < /sup > Consider if a short git hash suffices , ` < major > . < minor > . < patch > ` might not be too feasible to enact automatically . < sup > 3 < /sup > Idea : upload GitHub releases to PyPI , and merges to ` main ` to TestPyPI ? This way we can test the end user installation experience in advance through TestPyPI . < sup > 4 < /sup > ~~Also look into whether we can bundle a PostgreSQL instance alongside pg4n.~~ Nay by customer . -- - In case more dev hours can be expended : distribute man pages ? https : //github.com/pypa/packaging-problems/issues/72",Incorporate automatic deployment into the CI/CD pipeline,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-07 12:32:45+00:00,2022-11-22 15:15:02+00:00,2022-12-02 19:51:33+02:00
55,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0339324944652615e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-09-25 06:01:08+00:00
55,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.38895675263484e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-08 10:09:32+02:00
55,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0688769179978408e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-12-10 16:52:54+02:00
55,6c5e663747462817aa670b59addb191b618c5eb9,1.0409570677438753e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-10-11 17:32:29+03:00
55,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0395404387963936e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-10-26 12:21:19+03:00
55,aebf426ab3350d922e78442db19398914f4610aa,1.0403646228951402e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-07 20:09:02+02:00
55,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.032804084388772e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-10-13 12:22:38+03:00
55,149f24e74104b324b62326453e7cbe12b53a5f5a,1.1354325579304714e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-12-16 18:54:08+02:00
55,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0317753549315968e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-06 16:07:52+02:00
55,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0391944670118392e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-05 13:28:47+02:00
55,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0349190233682748e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-06 14:04:38+02:00
55,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0465191735420376e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-06 16:27:06+02:00
55,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.044323835230898e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-04 16:51:55+02:00
55,cd7168bd9791c3c51875f85850371cec52a72e57,1.050492937793024e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-21 16:23:44+02:00
55,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0376209502283018e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-12-22 12:07:50+02:00
55,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0319928151147906e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-22 17:15:00+02:00
55,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0425148502690718e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-21 22:39:05+02:00
55,9e87043b619778dee4903f22deeda35ed41af442,1.0345440387027338e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:02:15+02:00
55,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0349485819460824e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:02:28+02:00
55,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0295698302797971e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:02:45+02:00
55,bbd831ee1f05324f62486eca5ace30ed845111a7,1.050621176545974e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:21:55+02:00
55,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0308421224181076e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-12-12 14:47:03+02:00
55,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0330710210837424e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-12-16 13:05:50+02:00
55,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0509067578823306e-05,0,,Detect subquery that does n't use its select columns ( e29 per Brass ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-07 18:54:47+00:00,2022-11-08 08:07:17+00:00,2022-12-02 19:51:33+02:00
56,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0433602255943695e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-09-25 06:01:08+00:00
56,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.268918549612863e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-08 10:09:32+02:00
56,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0315254257875496e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-12-10 16:52:54+02:00
56,f0c8da964af2e49927972c237584994b8aca901b,4.023567817057483e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-08 10:05:35+02:00
56,6c5e663747462817aa670b59addb191b618c5eb9,1.0440271580591798e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-10-11 17:32:29+03:00
56,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.048881222232012e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-10-26 12:21:19+03:00
56,aebf426ab3350d922e78442db19398914f4610aa,1.0459474651725031e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-07 20:09:02+02:00
56,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0368612493039109e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-10-13 12:22:38+03:00
56,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0569019650574774e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-12-16 18:54:08+02:00
56,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0416204531793484e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-06 16:07:52+02:00
56,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0344463589717634e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-05 13:28:47+02:00
56,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0372657925472596e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-06 14:04:38+02:00
56,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0510199899727011e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-06 16:27:06+02:00
56,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0468925211171154e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-04 16:51:55+02:00
56,cd7168bd9791c3c51875f85850371cec52a72e57,1.058281759469537e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-21 16:23:44+02:00
56,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0489312444406096e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-12-22 12:07:50+02:00
56,33120fdaf85b81b29fda0b164e51a4d43a477810,1.035490640788339e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-22 17:15:00+02:00
56,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0475446288182866e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-21 22:39:05+02:00
56,9e87043b619778dee4903f22deeda35ed41af442,1.0394393029855564e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:02:15+02:00
56,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.065573360392591e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:02:28+02:00
56,dd91d2f5cb68a8ada87f47034162548dafa00053,1.045749922923278e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:02:45+02:00
56,bbd831ee1f05324f62486eca5ace30ed845111a7,1.046808665705612e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-11-21 12:21:55+02:00
56,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0229068720946088e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-12-12 14:47:03+02:00
56,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.03534748632228e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-12-16 13:05:50+02:00
56,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0573536201263778e-05,0,,Detect subquery condition that can be moved to the `` parent '' query ( e30 per Brass ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-07 18:55:37+00:00,2022-11-08 08:07:17+00:00,2022-12-02 19:51:33+02:00
61,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0242246389680076e-05,0,,Warning message levels ?,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-09-25 06:01:08+00:00
61,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.039801190927392e-05,0,,Warning message levels ?,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-08 10:09:32+02:00
61,89f77867806bb11df2be061fb4e287ef3bedaf62,1.020182935462799e-05,0,,Warning message levels ?,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-12-10 16:52:54+02:00
61,f0c8da964af2e49927972c237584994b8aca901b,1.0330385521228893e-05,0,,Warning message levels ?,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-08 10:05:35+02:00
61,6c5e663747462817aa670b59addb191b618c5eb9,1.033411990647437e-05,0,,Warning message levels ?,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-10-11 17:32:29+03:00
61,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.015157704387093e-05,0,,Warning message levels ?,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-10-26 12:21:19+03:00
61,aebf426ab3350d922e78442db19398914f4610aa,1.0230181032966357e-05,0,,Warning message levels ?,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-07 20:09:02+02:00
61,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.022817104967544e-05,0,,Warning message levels ?,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-10-13 12:22:38+03:00
61,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0908026524703018e-05,0,,Warning message levels ?,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-12-16 18:54:08+02:00
61,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0147085959033577e-05,0,,Warning message levels ?,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-06 16:07:52+02:00
61,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0141638995264657e-05,0,,Warning message levels ?,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-05 13:28:47+02:00
61,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0180226126976775e-05,0,,Warning message levels ?,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-06 14:04:38+02:00
61,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.015207999444101e-05,0,,Warning message levels ?,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-06 16:27:06+02:00
61,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.021584921545582e-05,0,,Warning message levels ?,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-04 16:51:55+02:00
61,cd7168bd9791c3c51875f85850371cec52a72e57,1.0247786121908575e-05,0,,Warning message levels ?,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-21 16:23:44+02:00
61,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0341927918489093e-05,0,,Warning message levels ?,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-12-22 12:07:50+02:00
61,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0366882634116337e-05,0,,Warning message levels ?,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-22 17:15:00+02:00
61,de27eb5c5d71e31de1e07099cbea189952749079,1.0230181032966357e-05,0,,Warning message levels ?,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-08 10:07:16+02:00
61,9e87043b619778dee4903f22deeda35ed41af442,1.0220663170912305e-05,0,,Warning message levels ?,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-21 12:02:15+02:00
61,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.03997972473735e-05,0,,Warning message levels ?,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-21 12:02:28+02:00
61,dd91d2f5cb68a8ada87f47034162548dafa00053,1.022333435685141e-05,0,,Warning message levels ?,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-21 12:02:45+02:00
61,bbd831ee1f05324f62486eca5ace30ed845111a7,1.2320808309596032e-05,0,,Warning message levels ?,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-11-21 12:21:55+02:00
61,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0188043233938515e-05,0,,Warning message levels ?,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-12-12 14:47:03+02:00
61,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0247502359561622e-05,0,,Warning message levels ?,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-12-16 13:05:50+02:00
61,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0452005881234072e-05,0,,Warning message levels ?,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-08 09:23:02+00:00,2022-11-22 10:09:25+00:00,2022-12-02 19:51:33+02:00
62,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0149621630262118e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-09-25 06:01:08+00:00
62,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.2612056707439478e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-08 10:09:32+02:00
62,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0496697541384492e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-12-10 16:52:54+02:00
62,f0c8da964af2e49927972c237584994b8aca901b,1.162667467724532e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-08 10:05:35+02:00
62,6c5e663747462817aa670b59addb191b618c5eb9,1.0518843737372665e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-10-11 17:32:29+03:00
62,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0321758963982576e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-10-26 12:21:19+03:00
62,aebf426ab3350d922e78442db19398914f4610aa,1.0239414223178755e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-07 20:09:02+02:00
62,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0288964404026046e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-10-13 12:22:38+03:00
62,149f24e74104b324b62326453e7cbe12b53a5f5a,1.3399424460658338e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-12-16 18:54:08+02:00
62,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0269103768223433e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-06 16:07:52+02:00
62,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0234815817966592e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-05 13:28:47+02:00
62,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0314083738194311e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-06 14:04:38+02:00
62,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.049306411005091e-05,0,Proposed by customer,Match psql version against supported versions,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-06 16:27:06+02:00
62,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.1680386705847924e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-04 16:51:55+02:00
62,cd7168bd9791c3c51875f85850371cec52a72e57,1.0736796866694933e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-21 16:23:44+02:00
62,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.026663630909752e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-12-22 12:07:50+02:00
62,33120fdaf85b81b29fda0b164e51a4d43a477810,1.036023058986757e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-22 17:15:00+02:00
62,de27eb5c5d71e31de1e07099cbea189952749079,1.0323796232114546e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-08 10:07:16+02:00
62,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.040881670633098e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-21 22:39:05+02:00
62,9e87043b619778dee4903f22deeda35ed41af442,1.0649587238731328e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-21 12:02:15+02:00
62,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.048293233907316e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-21 12:02:28+02:00
62,dd91d2f5cb68a8ada87f47034162548dafa00053,1.1049855856981594e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-21 12:02:45+02:00
62,bbd831ee1f05324f62486eca5ace30ed845111a7,1.050446826411644e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-11-21 12:21:55+02:00
62,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0467567335581409e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-12-12 14:47:03+02:00
62,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0526159712753724e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-12-16 13:05:50+02:00
62,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0330552868254015e-05,0,Proposed by customer,Match psql version against supported versions,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-08 09:45:18+00:00,2022-12-08 11:45:10+00:00,2022-12-02 19:51:33+02:00
63,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0637660125212278e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-09-25 06:01:08+00:00
63,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.022598644340178e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-08 10:09:32+02:00
63,89f77867806bb11df2be061fb4e287ef3bedaf62,1.036493449646514e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-12-10 16:52:54+02:00
63,f0c8da964af2e49927972c237584994b8aca901b,1.035623972711619e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-08 10:05:35+02:00
63,6c5e663747462817aa670b59addb191b618c5eb9,1.0455994015501346e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-10-11 17:32:29+03:00
63,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0282078619638924e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-10-26 12:21:19+03:00
63,aebf426ab3350d922e78442db19398914f4610aa,1.022215474222321e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-07 20:09:02+02:00
63,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0308460332453253e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-10-13 12:22:38+03:00
63,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0228249266219793e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-12-16 18:54:08+02:00
63,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.1808685485448224e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-06 16:07:52+02:00
63,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0247580576105976e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-05 13:28:47+02:00
63,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0339620530430691e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-06 14:04:38+02:00
63,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.2103815606678836e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-06 16:27:06+02:00
63,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0354027836001478e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-04 16:51:55+02:00
63,cd7168bd9791c3c51875f85850371cec52a72e57,1.0305236173735466e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-21 16:23:44+02:00
63,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0178643606195692e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-12-22 12:07:50+02:00
63,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0301492693542968e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-22 17:15:00+02:00
63,de27eb5c5d71e31de1e07099cbea189952749079,1.0324751201551408e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-08 10:07:16+02:00
63,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0461400052008685e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-21 22:39:05+02:00
63,9e87043b619778dee4903f22deeda35ed41af442,1.0250395462207962e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-21 12:02:15+02:00
63,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0252213542116806e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-21 12:02:28+02:00
63,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0284029485774226e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-21 12:02:45+02:00
63,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0299194400431588e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-11-21 12:21:55+02:00
63,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.5013719348644372e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-12-12 14:47:03+02:00
63,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0433741408633068e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-12-16 13:05:50+02:00
63,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0302946975571103e-05,0,References at ` src/bin/psql/prompt.c ` and ` src/bin/psql/settings.h ` in PostgreSQL source tree .,Find out all possible psql prompt formats,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-08 10:01:52+00:00,2022-12-16 17:39:42+00:00,2022-12-02 19:51:33+02:00
67,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0356032362324186e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-09-25 06:01:08+00:00
67,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0432139788463246e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-08 10:09:32+02:00
67,89f77867806bb11df2be061fb4e287ef3bedaf62,1.039592007145984e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-12-10 16:52:54+02:00
67,f0c8da964af2e49927972c237584994b8aca901b,1.040760525938822e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-08 10:05:35+02:00
67,6c5e663747462817aa670b59addb191b618c5eb9,1.045735007210169e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-10-11 17:32:29+03:00
67,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0379317245678976e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-10-26 12:21:19+03:00
67,aebf426ab3350d922e78442db19398914f4610aa,1.0358916370023508e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-07 20:09:02+02:00
67,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0262621799483895e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-10-13 12:22:38+03:00
67,149f24e74104b324b62326453e7cbe12b53a5f5a,4.094113319297321e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-12-16 18:54:08+02:00
67,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.030194471240975e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-06 16:07:52+02:00
67,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0406732144474518e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-05 13:28:47+02:00
67,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0306622243660968e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-06 14:04:38+02:00
67,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0406801266071852e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-06 16:27:06+02:00
67,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0357682185713202e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-04 16:51:55+02:00
67,cd7168bd9791c3c51875f85850371cec52a72e57,1.0492363799130544e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-21 16:23:44+02:00
67,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0398081030871252e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-12-22 12:07:50+02:00
67,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0304931493010372e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-22 17:15:00+02:00
67,de27eb5c5d71e31de1e07099cbea189952749079,1.0401621693745255e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-08 10:07:16+02:00
67,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0404549357190264e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-21 22:39:05+02:00
67,9e87043b619778dee4903f22deeda35ed41af442,1.0404915883555075e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-21 12:02:15+02:00
67,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0406772162241396e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-21 12:02:28+02:00
67,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0410404684080277e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-21 12:02:45+02:00
67,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0376596037531272e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-11-21 12:21:55+02:00
67,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0332189049222508e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-12-12 14:47:03+02:00
67,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0438628123665694e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-12-16 13:05:50+02:00
67,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.046473244059598e-05,0,Either at end of Sp5 or QA,Create a maintaining plan in Sphinx that includes architecture and interfaces,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-10 10:26:18+00:00,2022-12-16 17:40:00+00:00,2022-12-02 19:51:33+02:00
68,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0422772902529688e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-09-25 06:01:08+00:00
68,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.050090304488549e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-08 10:09:32+02:00
68,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0417833436804358e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-12-10 16:52:54+02:00
68,f0c8da964af2e49927972c237584994b8aca901b,1.0431154805701226e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-08 10:05:35+02:00
68,6c5e663747462817aa670b59addb191b618c5eb9,1.0431771443109028e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-10-11 17:32:29+03:00
68,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.044054988597054e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-10-26 12:21:19+03:00
68,aebf426ab3350d922e78442db19398914f4610aa,1.037187576002907e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-07 20:09:02+02:00
68,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0363669389334971e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-10-13 12:22:38+03:00
68,149f24e74104b324b62326453e7cbe12b53a5f5a,1.026341487886384e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-12-16 18:54:08+02:00
68,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0391638170403894e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-06 16:07:52+02:00
68,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0447720342199318e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-05 13:28:47+02:00
68,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.041752602759516e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-06 14:04:38+02:00
68,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0421629667689558e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-06 16:27:06+02:00
68,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.047671594278654e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-04 16:51:55+02:00
68,cd7168bd9791c3c51875f85850371cec52a72e57,1.0421311344543938e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-21 16:23:44+02:00
68,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.041797258949373e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-12-22 12:07:50+02:00
68,33120fdaf85b81b29fda0b164e51a4d43a477810,1.035477816913044e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-22 17:15:00+02:00
68,de27eb5c5d71e31de1e07099cbea189952749079,1.0482472134754062e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-08 10:07:16+02:00
68,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0324446520826314e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-21 22:39:05+02:00
68,9e87043b619778dee4903f22deeda35ed41af442,1.049145339493407e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-21 12:02:15+02:00
68,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0434518117108382e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-21 12:02:28+02:00
68,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0424989341117907e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-21 12:02:45+02:00
68,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0399301572761033e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-11-21 12:21:55+02:00
68,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.037256879499182e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-12-12 14:47:03+02:00
68,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.043504562403541e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-12-16 13:05:50+02:00
68,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0516777365410236e-05,0,"Find out idiomatic ways to configure python programs . Command-line arguments might not be practical , as the program takes psql arguments also . Configurable things could be like disabling specific semantic error warnings , or maybe passing passwords . Associated issues # 61",Configuring the program,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-10 10:29:55+00:00,2022-11-21 20:39:06+00:00,2022-12-02 19:51:33+02:00
70,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0301640031684656e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-09-25 06:01:08+00:00
70,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0579587979009377e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-08 10:09:32+02:00
70,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0524624485697132e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-12-10 16:52:54+02:00
70,f0c8da964af2e49927972c237584994b8aca901b,1.661319583945442e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-08 10:05:35+02:00
70,6c5e663747462817aa670b59addb191b618c5eb9,1.0370609743404202e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-10-11 17:32:29+03:00
70,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0472899703017902e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-10-26 12:21:19+03:00
70,aebf426ab3350d922e78442db19398914f4610aa,1.0336328159610275e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-07 20:09:02+02:00
70,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.034423621604219e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-10-13 12:22:38+03:00
70,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0225459845969452e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-12-16 18:54:08+02:00
70,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.031269675877411e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-06 16:07:52+02:00
70,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0407208719698248e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-05 13:28:47+02:00
70,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0358550753153397e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-06 14:04:38+02:00
70,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0422057130199391e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-06 16:27:06+02:00
70,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.053546839102637e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-04 16:51:55+02:00
70,cd7168bd9791c3c51875f85850371cec52a72e57,1.0378297702118289e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-21 16:23:44+02:00
70,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0402048246760389e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-12-22 12:07:50+02:00
70,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0345450391469058e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-22 17:15:00+02:00
70,de27eb5c5d71e31de1e07099cbea189952749079,1.0449893125041854e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-08 10:07:16+02:00
70,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0427764209453017e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-21 22:39:05+02:00
70,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0664496585377492e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-21 12:02:28+02:00
70,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0594490049697924e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-11-21 12:02:45+02:00
70,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.030485327646602e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-12-12 14:47:03+02:00
70,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0508937521080952e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-12-16 13:05:50+02:00
70,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0468345863046125e-05,0,,Detect strange HAVING clause without GROUP BY ( e32 per Brass ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-17 17:50:30+00:00,2022-11-21 10:02:16+00:00,2022-12-02 19:51:33+02:00
72,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.032241834764136e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-09-25 06:01:08+00:00
72,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.055636766977841e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-08 10:09:32+02:00
72,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0510340871405788e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-12-10 16:52:54+02:00
72,f0c8da964af2e49927972c237584994b8aca901b,1.053244614013238e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-08 10:05:35+02:00
72,6c5e663747462817aa670b59addb191b618c5eb9,1.0396772267995402e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-10-11 17:32:29+03:00
72,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0410246432002168e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-10-26 12:21:19+03:00
72,aebf426ab3350d922e78442db19398914f4610aa,1.0353691322961822e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-07 20:09:02+02:00
72,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0332287274650298e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-10-13 12:22:38+03:00
72,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0172597285418306e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-12-16 18:54:08+02:00
72,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.030251405609306e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-06 16:07:52+02:00
72,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0366397873440292e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-05 13:28:47+02:00
72,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.036439061863348e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-06 14:04:38+02:00
72,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.047961359290639e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-06 16:27:06+02:00
72,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.053745836543385e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-04 16:51:55+02:00
72,cd7168bd9791c3c51875f85850371cec52a72e57,1.039933067659149e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-21 16:23:44+02:00
72,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0412569281470496e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-12-22 12:07:50+02:00
72,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0322220987291075e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-22 17:15:00+02:00
72,de27eb5c5d71e31de1e07099cbea189952749079,1.046386478265049e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-08 10:07:16+02:00
72,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0428887435409706e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-21 22:39:05+02:00
72,9e87043b619778dee4903f22deeda35ed41af442,1.0567185199761298e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-21 12:02:15+02:00
72,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0523780474613886e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-21 12:02:45+02:00
72,bbd831ee1f05324f62486eca5ace30ed845111a7,1.1989895028818864e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-11-21 12:21:55+02:00
72,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0531984116823878e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-12-16 13:05:50+02:00
72,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0493834452063313e-05,0,,Detect SUM/AVG ( DISTINCT ... ) ( e33 per Brass ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-17 18:29:35+00:00,2022-11-21 10:02:30+00:00,2022-12-02 19:51:33+02:00
74,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.032389536703704e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-09-25 06:01:08+00:00
74,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0440012374601793e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-08 10:09:32+02:00
74,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0419503269076811e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-12-10 16:52:54+02:00
74,f0c8da964af2e49927972c237584994b8aca901b,1.0370867130404804e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-08 10:05:35+02:00
74,6c5e663747462817aa670b59addb191b618c5eb9,1.0409352398710324e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-10-11 17:32:29+03:00
74,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.043637894326821e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-10-26 12:21:19+03:00
74,aebf426ab3350d922e78442db19398914f4610aa,1.0340478183934463e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-07 20:09:02+02:00
74,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0356259735999627e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-10-13 12:22:38+03:00
74,149f24e74104b324b62326453e7cbe12b53a5f5a,1.045112821884686e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-12-16 18:54:08+02:00
74,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0301885595254134e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-06 16:07:52+02:00
74,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.030507883115206e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-05 13:28:47+02:00
74,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0363561159465462e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-06 14:04:38+02:00
74,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0447461136209313e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-06 16:27:06+02:00
74,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0389716408099048e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-04 16:51:55+02:00
74,cd7168bd9791c3c51875f85850371cec52a72e57,1.0469514563737904e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-21 16:23:44+02:00
74,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0412778465251904e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-12-22 12:07:50+02:00
74,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0289651072525883e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-22 17:15:00+02:00
74,de27eb5c5d71e31de1e07099cbea189952749079,1.0398121048638131e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-08 10:07:16+02:00
74,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0347956049372442e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-21 22:39:05+02:00
74,9e87043b619778dee4903f22deeda35ed41af442,1.0331656085327268e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-21 12:02:15+02:00
74,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.049510592565639e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-21 12:02:28+02:00
74,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0440051482873969e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-11-21 12:21:55+02:00
74,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.039357994159218e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-12-12 14:47:03+02:00
74,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0497939001652412e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-12-16 13:05:50+02:00
74,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0470622328284662e-05,0,,Detect wildcards without LIKE ( e34 per Brass ),Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-17 19:17:53+00:00,2022-11-21 10:02:46+00:00,2022-12-02 19:51:33+02:00
76,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.040806182572851e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-09-25 06:01:08+00:00
76,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0582069990050512e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-08 10:09:32+02:00
76,89f77867806bb11df2be061fb4e287ef3bedaf62,1.052719380822964e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-12-10 16:52:54+02:00
76,f0c8da964af2e49927972c237584994b8aca901b,1.05614926724229e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-08 10:05:35+02:00
76,6c5e663747462817aa670b59addb191b618c5eb9,1.0503005796635987e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-10-11 17:32:29+03:00
76,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.0465591003594454e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-10-26 12:21:19+03:00
76,aebf426ab3350d922e78442db19398914f4610aa,1.043190059135668e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-07 20:09:02+02:00
76,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.028655060508754e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-10-13 12:22:38+03:00
76,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0245334124192595e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-12-16 18:54:08+02:00
76,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0377387297921814e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-06 16:07:52+02:00
76,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.037773381540319e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-05 13:28:47+02:00
76,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0422275408927815e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-06 14:04:38+02:00
76,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0518282579141667e-05,0,,Add error formatter to unify error/warning message from different checkers,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-06 16:27:06+02:00
76,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.057464578479994e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-04 16:51:55+02:00
76,cd7168bd9791c3c51875f85850371cec52a72e57,1.046404395310674e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-21 16:23:44+02:00
76,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.043636893882649e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-12-22 12:07:50+02:00
76,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0379643754276913e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-22 17:15:00+02:00
76,de27eb5c5d71e31de1e07099cbea189952749079,1.0504809324629605e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-08 10:07:16+02:00
76,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0468375876371285e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-21 22:39:05+02:00
76,9e87043b619778dee4903f22deeda35ed41af442,1.0544274118728936e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-21 12:02:15+02:00
76,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.054597396432655e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-21 12:02:28+02:00
76,dd91d2f5cb68a8ada87f47034162548dafa00053,1.057202371157473e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-11-21 12:02:45+02:00
76,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0362928151153028e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-12-12 14:47:03+02:00
76,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0386882422608323e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-12-16 13:05:50+02:00
76,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.056211749528302e-05,0,,Add error formatter to unify error/warning message from different checkers,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-18 13:45:00+00:00,2022-11-21 10:21:56+00:00,2022-12-02 19:51:33+02:00
79,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.048543163051363e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-09-25 06:01:08+00:00
79,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0489132364455143e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-08 10:09:32+02:00
79,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0387635484221391e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-12-10 16:52:54+02:00
79,f0c8da964af2e49927972c237584994b8aca901b,1.033029730024282e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-08 10:05:35+02:00
79,6c5e663747462817aa670b59addb191b618c5eb9,1.0470502274984028e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-10-11 17:32:29+03:00
79,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,4.477426773519255e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-10-26 12:21:19+03:00
79,aebf426ab3350d922e78442db19398914f4610aa,1.0337373169022612e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-07 20:09:02+02:00
79,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.037689253280405e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-10-13 12:22:38+03:00
79,149f24e74104b324b62326453e7cbe12b53a5f5a,1.017964314087294e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-12-16 18:54:08+02:00
79,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0395840035926083e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-06 16:07:52+02:00
79,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0299694622517563e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-05 13:28:47+02:00
79,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0403477062936872e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-06 14:04:38+02:00
79,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0380188541603276e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-06 16:27:06+02:00
79,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0419830687169451e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-04 16:51:55+02:00
79,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.866103229986038e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-12-22 12:07:50+02:00
79,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0315529834770132e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-22 17:15:00+02:00
79,de27eb5c5d71e31de1e07099cbea189952749079,1.1310769878036808e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-08 10:07:16+02:00
79,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0497417861188296e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-21 22:39:05+02:00
79,9e87043b619778dee4903f22deeda35ed41af442,1.0501594260858838e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-21 12:02:15+02:00
79,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0349229341954924e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-21 12:02:28+02:00
79,dd91d2f5cb68a8ada87f47034162548dafa00053,1.023053209792124e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-21 12:02:45+02:00
79,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0381921129010152e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-11-21 12:21:55+02:00
79,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0337737876398023e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-12-16 13:05:50+02:00
79,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0537116395425984e-05,0,"Removing ` \n 's is a tough problem , see ought to replace \n with ` ` to avoid ` SELECT * FROM ` .",Edge cases with newlined psql queries,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-19 17:10:41+00:00,2022-12-12 12:47:05+00:00,2022-12-02 19:51:33+02:00
81,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.035794866766082e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-09-25 06:01:08+00:00
81,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0308411219739357e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-08 10:09:32+02:00
81,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0424035281175748e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-12-10 16:52:54+02:00
81,f0c8da964af2e49927972c237584994b8aca901b,1.048565172823146e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-08 10:05:35+02:00
81,6c5e663747462817aa670b59addb191b618c5eb9,1.033039552567061e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-10-11 17:32:29+03:00
81,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.03258253147942e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-10-26 12:21:19+03:00
81,aebf426ab3350d922e78442db19398914f4610aa,2.464339013386052e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-07 20:09:02+02:00
81,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0263287549605591e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-10-13 12:22:38+03:00
81,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0152138202101924e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-12-16 18:54:08+02:00
81,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0230707630398683e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-06 16:07:52+02:00
81,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0115095392393414e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-05 13:28:47+02:00
81,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0235196896246634e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-06 14:04:38+02:00
81,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0263307558489032e-05,0,,Detect syntax errors to allow syntax error analysis in future,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-06 16:27:06+02:00
81,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.036479625327047e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-04 16:51:55+02:00
81,cd7168bd9791c3c51875f85850371cec52a72e57,1.0441964150231796e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-21 16:23:44+02:00
81,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0377931175753474e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-12-22 12:07:50+02:00
81,33120fdaf85b81b29fda0b164e51a4d43a477810,1.033901935443282e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-22 17:15:00+02:00
81,de27eb5c5d71e31de1e07099cbea189952749079,1.042192798195174e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-08 10:07:16+02:00
81,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.032535237754928e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-21 22:39:05+02:00
81,9e87043b619778dee4903f22deeda35ed41af442,1.044140662997961e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:02:15+02:00
81,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0458536962687504e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:02:28+02:00
81,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0439265679451635e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:02:45+02:00
81,bbd831ee1f05324f62486eca5ace30ed845111a7,1.163072283816291e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:21:55+02:00
81,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.0406910405436063e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-12-16 13:05:50+02:00
81,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.050639184541069e-05,0,,Detect syntax errors to allow syntax error analysis in future,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-21 09:53:55+00:00,2022-12-12 12:47:04+00:00,2022-12-02 19:51:33+02:00
87,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0516437214391772e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-09-25 06:01:08+00:00
87,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0505380487302318e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-08 10:09:32+02:00
87,89f77867806bb11df2be061fb4e287ef3bedaf62,1.04961372926482e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-12-10 16:52:54+02:00
87,f0c8da964af2e49927972c237584994b8aca901b,1.051667732099304e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-08 10:05:35+02:00
87,6c5e663747462817aa670b59addb191b618c5eb9,1.0556246706983076e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-10-11 17:32:29+03:00
87,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.053171308740275e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-10-26 12:21:19+03:00
87,aebf426ab3350d922e78442db19398914f4610aa,1.0388586815679446e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-07 20:09:02+02:00
87,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0351579476264304e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-10-13 12:22:38+03:00
87,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0264403499604668e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-12-16 18:54:08+02:00
87,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0397208825452252e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-06 16:07:52+02:00
87,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0461139936523978e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-05 13:28:47+02:00
87,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0424870197311977e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-06 14:04:38+02:00
87,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0470822417119052e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-06 16:27:06+02:00
87,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0446286978549324e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-04 16:51:55+02:00
87,cd7168bd9791c3c51875f85850371cec52a72e57,1.0207922059635166e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-21 16:23:44+02:00
87,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.0457150892762002e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-12-22 12:07:50+02:00
87,33120fdaf85b81b29fda0b164e51a4d43a477810,1.03695820143912e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-22 17:15:00+02:00
87,de27eb5c5d71e31de1e07099cbea189952749079,1.0471560926816892e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-08 10:07:16+02:00
87,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0558058420429006e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-21 22:39:05+02:00
87,9e87043b619778dee4903f22deeda35ed41af442,1.0505590580578428e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:02:15+02:00
87,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0498139090486802e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:02:28+02:00
87,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0469992957951035e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:02:45+02:00
87,bbd831ee1f05324f62486eca5ace30ed845111a7,1.060423437593272e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-11-21 12:21:55+02:00
87,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0328149073757231e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-12-12 14:47:03+02:00
87,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.032606087392196e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-12-16 13:05:50+02:00
87,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.0635449143592268e-05,0,,Handle psqlconninfo etc . errors gracefully with e.g sole `` -- help '' argument,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-22 11:13:31+00:00,2022-12-12 12:47:04+00:00,2022-12-02 19:51:33+02:00
91,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0425725122331642e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-09-25 06:01:08+00:00
91,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0345716873416675e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-08 10:09:32+02:00
91,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0414733878860716e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-12-10 16:52:54+02:00
91,f0c8da964af2e49927972c237584994b8aca901b,1.044260170601774e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-08 10:05:35+02:00
91,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,2.7800229872809723e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-10-26 12:21:19+03:00
91,aebf426ab3350d922e78442db19398914f4610aa,1.0274491614836734e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-07 20:09:02+02:00
91,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0379199011367746e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-10-13 12:22:38+03:00
91,149f24e74104b324b62326453e7cbe12b53a5f5a,1.021826574287843e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-12-16 18:54:08+02:00
91,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.0382247637608089e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-06 16:07:52+02:00
91,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.8340550013817847e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-05 13:28:47+02:00
91,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.0402971383882686e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-06 14:04:38+02:00
91,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.0413025847810786e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-06 16:27:06+02:00
91,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0450171430420596e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-04 16:51:55+02:00
91,cd7168bd9791c3c51875f85850371cec52a72e57,1.0251998901367188e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-21 16:23:44+02:00
91,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.1354162779753096e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-12-22 12:07:50+02:00
91,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0355992344557308e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-22 17:15:00+02:00
91,de27eb5c5d71e31de1e07099cbea189952749079,1.0314142855349928e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-08 10:07:16+02:00
91,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.046004308591364e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-21 22:39:05+02:00
91,9e87043b619778dee4903f22deeda35ed41af442,1.0457020835019648e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-21 12:02:15+02:00
91,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0491273314983118e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-21 12:02:28+02:00
91,dd91d2f5cb68a8ada87f47034162548dafa00053,1.042480107571464e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-21 12:02:45+02:00
91,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0272346116835251e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-11-21 12:21:55+02:00
91,535fdf800713ce7b74f1e330e9c02af0bb981db2,2.317248981853481e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-12-12 14:47:03+02:00
91,ff25e18f8bfefbf98a4f27a1eccaf633c8313844,1.1006545719283167e-05,0,QEPParser executes sql queries prefixed with ` EXPLAIN ANALYZE ` using the psycopg library . The program crashes when psycopg detects sql error and throws an exception that is not caught in QEPParser . Exploration / partial fix in branch tmp/qepparser-crash,Fix QEPParser crashes on sql syntax errors,Merge pull request # 93 from Project-C-SQL/fix/sqlparser-typeconv,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-25 12:06:28+00:00,2022-12-16 11:05:51+00:00,2022-12-02 19:51:33+02:00
92,deb3a2a40e7985cd361fcd18ccfebab53b113d71,1.0451706657477187e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 4 from Project-C-SQL/feat/pexpect-wrapper,"['main.py', 'wrapper.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-09-25 06:01:08+00:00
92,4fa9eda88b8e6a94c4e6662a86f87da7bc41d060,1.0275627573719248e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 59 from Project-C-SQL/feat/implied-expression,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_implied_expression_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-08 10:09:32+02:00
92,89f77867806bb11df2be061fb4e287ef3bedaf62,1.0452285096107516e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 94 from Project-C-SQL/feat/inconsistent-expression,"['scripts/gen_config_values.bash', 'src/pg4n/config_values.py', 'src/pg4n/inconsistent_expression_checker.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_inconsistent_expression_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-12-10 16:52:54+02:00
92,f0c8da964af2e49927972c237584994b8aca901b,1.053715641319286e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 57 from Project-C-SQL/feat/subquery-orderby,"['src/pg4n/orderby.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/test/test_subquery_orderby_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-08 10:05:35+02:00
92,6c5e663747462817aa670b59addb191b618c5eb9,1.108062770072138e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 29 from Project-C-SQL/feat/qep-parser,"['.gitattributes', 'qepparser.py', 'test_qepparser.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-10-11 17:32:29+03:00
92,994c90902cfebc3d5a4f4756e8b07aa1f1899d21,1.6095222235890105e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 36 from Project-C-SQL/fix/refactor-sqlparser,"['src/pg4n/sqlparser.py', 'src/pg4n/test/test_sqlparser.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-10-26 12:21:19+03:00
92,aebf426ab3350d922e78442db19398914f4610aa,1.1171419828315264e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 53 from Project-C-SQL/feat/semantic-router,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-07 20:09:02+02:00
92,576ff1d3f49e6180a05f05e0e2ae13ba93d7ecb4,1.0339344953536056e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 31 from Project-C-SQL/feat/add-docs,"['.github/workflows/ci-flow.yml', '.gitignore', 'README.md', 'docs/architecture.md', 'docs/conf.py', 'docs/index.rst', 'docs/interfaces.md', 'docs/program-architecture.md', 'main.py', 'orderby.py', 'poetry.lock', 'psqlparser.py', 'psqlwrapper.py', 'pyproject.toml', 'qepparser.py', 'sqlparser.py', 'src/pg4n/__init__.py', 'src/pg4n/main.py', 'src/pg4n/orderby.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/__init__.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/util.py', 'test_qepparser.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-10-13 12:22:38+03:00
92,149f24e74104b324b62326453e7cbe12b53a5f5a,1.0325254152121488e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 101 from Project-C-SQL/feat/maintenance-plan,"['docs/architecture.jpg', 'docs/architecture.md', 'docs/index.rst', 'docs/interfaces.md', 'docs/maintenance-plan.md', 'docs/pg4n.md', 'docs/program-architecture.md']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-12-16 18:54:08+02:00
92,34b89977c8da671ed279950b4e5c98e364b2ee0a,1.041874838847434e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 48 from Project-C-SQL/feat/vt100decode,"['poetry.lock', 'pyproject.toml', 'src/pg4n/main.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-06 16:07:52+02:00
92,672575a8e3f414ce9ffa1f47b1e18b13d13fb9eb,1.0322437447030096e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 44 from Project-C-SQL/feat/improve-qeps,"['README.md', 'src/pg4n/qepparser.py', 'src/pg4n/test/test_qepparser.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-05 13:28:47+02:00
92,67a44d6dcf82358abcf699c347b79c06a6c74dbe,1.038834852806758e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 51 from Project-C-SQL/feat/add-linter,"['.github/actions/install/action.yml', '.github/workflows/ci-flow.yml', '.github/workflows/pr_flow.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'docs/_static/github-mark.svg', 'docs/_templates/footer.html', 'docs/conf.py', 'docs/program-architecture.md', 'poetry.lock', 'pyproject.toml', 'scripts/ci-grade.sh']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-06 14:04:38+02:00
92,384f6bc82083044b78ca8730d99ba7b0d48e61d1,1.051956587616587e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Get connection information via psql for psycopg . # 45,['src/pg4n/psqlconninfo.py'],2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-06 16:27:06+02:00
92,1d78bdd62aa8b991c2c3745bb94b8d983f0a0f27,1.0443756764288992e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 46 from Project-C-SQL/feat/cmp-domain,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/sqlparser.py', 'src/pg4n/test/test_cmp_domain_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-04 16:51:55+02:00
92,cd7168bd9791c3c51875f85850371cec52a72e57,1.0379535524407402e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 80 from Project-C-SQL/fix/wrapper,"['src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-21 16:23:44+02:00
92,dbbd4ef6012e41811e4d34b77b6e621abbb89329,1.4031382306711748e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 103 from Project-C-SQL/feat/githooks,"['README.md', 'docs/conf.py', 'poetry.lock', 'pyproject.toml', 'src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/qepparser.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_order_by_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_cmp_domain_checker.py', 'src/pg4n/test/test_config_parser.py', 'src/pg4n/test/test_implied_expression_checker.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py', 'src/pg4n/test/test_qepparser.py', 'src/pg4n/test/test_subquery_order_by_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-12-22 12:07:50+02:00
92,33120fdaf85b81b29fda0b164e51a4d43a477810,1.0358017789258156e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 85 from Project-C-SQL/feat/cd-publish,"['.github/workflows/ci-cd.yml', '.github/workflows/grade.yml', '.github/workflows/pytest.yml', '.github/workflows/sphinx.yml', 'README.md', 'pyproject.toml', 'scripts/cd-publish.sh']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-22 17:15:00+02:00
92,de27eb5c5d71e31de1e07099cbea189952749079,1.0328218195354566e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 58 from Project-C-SQL/feat/subquery-select,"['src/pg4n/subquery_select_checker.py', 'src/pg4n/test/test_subquery_select_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-08 10:07:16+02:00
92,7a2404b05defc51c519424b9b8ecfc2de17e58a5,1.0467098036315292e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 78 from Project-C-SQL/feat/config,"['src/pg4n/config_parser.py', 'src/pg4n/config_reader.py', 'src/pg4n/config_values.py', 'src/pg4n/test/test_config_parser.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-21 22:39:05+02:00
92,9e87043b619778dee4903f22deeda35ed41af442,1.0452255082782358e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 71 from Project-C-SQL/feat/strange-having,"['src/pg4n/strange_having_checker.py', 'src/pg4n/test/test_strange_having_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-21 12:02:15+02:00
92,ae84511f5cfb6a26de051d692f2c3fbccd5d9e3f,1.0399518941994756e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 73 from Project-C-SQL/feat/sum-distinct,"['src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_sum_distinct_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-21 12:02:28+02:00
92,dd91d2f5cb68a8ada87f47034162548dafa00053,1.0303761882823892e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 75 from Project-C-SQL/feat/eq-wildcard,"['src/pg4n/eq_wildcard_checker.py', 'src/pg4n/test/test_eq_wildcard_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-21 12:02:45+02:00
92,bbd831ee1f05324f62486eca5ace30ed845111a7,1.0435513104312122e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 77 from Project-C-SQL/feat/errfmt,"['src/pg4n/cmp_domain_checker.py', 'src/pg4n/eq_wildcard_checker.py', 'src/pg4n/errfmt.py', 'src/pg4n/implied_expression_checker.py', 'src/pg4n/strange_having_checker.py', 'src/pg4n/subquery_orderby_checker.py', 'src/pg4n/subquery_select_checker.py', 'src/pg4n/sum_distinct_checker.py', 'src/pg4n/test/test_errfmt.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-11-21 12:21:55+02:00
92,535fdf800713ce7b74f1e330e9c02af0bb981db2,1.0422117156849708e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 95 from Project-C-SQL/feat/error-handling-and-syntax-error-detection,"['src/pg4n/main.py', 'src/pg4n/psqlconninfo.py', 'src/pg4n/psqlparser.py', 'src/pg4n/psqlwrapper.py', 'src/pg4n/semanticrouter.py', 'src/pg4n/test/test_psqlparser.py', 'src/pg4n/test/test_psqlwrapper.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-12-12 14:47:03+02:00
92,3d6dec83450eb47b7c1c89380c7d32be851a2780,1.1441194146755151e-05,0,"Run ` SELECT * FROM albums ; ` or ` SELECT * FROM orders ; ` on customer-provided test database . Does n't crash without QEP parser , or without semantic router loaded , so seems like SQL parser is at fault . ` = # SELECT * FROM albums ; unable to convert from internal type 'boolean ' to declared type `",SQL parser crashes when querying database_generate.sql,Merge pull request # 97 from Project-C-SQL/fix/qepparser-crash,"['src/pg4n/implied_expression_checker.py', 'src/pg4n/qepparser.py', 'src/pg4n/subquery_order_by_checker.py']",2022-11-30 12:25:04+00:00,2022-12-02 17:51:34+00:00,2022-12-16 13:05:50+02:00
